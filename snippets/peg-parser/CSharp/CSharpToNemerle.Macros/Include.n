using System;
using System.IO;
using SCG = System.Collections.Generic;

using Nemerle;
using Nemerle.Assertions;
using Nemerle.Compiler;
using Nemerle.Utility;

namespace CSharpToNemerle
{
  [MacroUsage(MacroPhase.BeforeTypedMembers, MacroTargets.Assembly)]
  macro Include(files : string)
  {
    def manager = Macros.Manager();
    def converter = CSharpToNemerle.AstConverter(manager);
    def parser = CSharpParser.Parser();
    def projectDir = Path.GetDirectoryName(manager.Options.ProjectPath);
    foreach(fileName in Directory.GetFiles(projectDir, files)) {
      def fileIndex = Location.AddFile(fileName);
      def source = Nemerle.Peg.SourceSnapshot(File.ReadAllText(fileName), fileIndex, fileName);
      match(parser.Parse(source)) {
        | Some(compilationUnit) =>
          converter.Merge(compilationUnit)
        | _ =>
          Message.Error($"failed to parse file `$fileName'.")
      }
    }
  }
}