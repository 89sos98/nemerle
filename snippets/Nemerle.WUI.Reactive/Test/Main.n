using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Console;
using System.Diagnostics;
using System.Linq;

using Nemerle.Xml;
using Nemerle.WUI.Reactive;
using System.Xml.Linq;
using Utils;

[Record, ViewModel]
public class TestViewModel
{
  public FirstName : string { get; set; }
  public LastName  : string { get; set; }
  public FullName  : string
  {
    get { $"$(this.FirstName) $LastName!" }
  }

  Children : VMArray[Name : string, Age : int];
}

public module Program
{
  [View()]
  public TestView(viewModel : TestViewModel) : XElement
  {
    _ = viewModel;
    xml <# 
      <div class='note'>
        <p>First name: <input data-bind="value: viewModel.FirstName" /></p>
        <p>Last name: <input data-bind="value: viewModel.LastName" /></p>
        <h2>Hello, <span data-bind="text: viewModel.FullName" />!</h2>    
      </div>
    #>
  }
  
  /// returns page path
  MakePage() : string
  {
    def pagePath = "page.htm";
    def viewModel = TestViewModel("Vlad", "Chistyakiv", VMArray([TestViewModel.TChildren("Ксюша", 1)]));
    def testView = TestView(viewModel);
  
    def page = Template.Load("PageTemplate.htm");
    
    page.SetContent("TestView", testView);
    
    //TODO: Implement support of CDATA
    def script = XElement.Parse($<#
<script type='text/javascript'>
  /*<![CDATA[*/
  $(viewModel.GetViewModelScript())
  /*]]>*/
</script>
    #>);
    page.SetContent("Scripr", script);
    
    
    page.Save(pagePath, SaveOptions.DisableFormatting);
    pagePath
  }
  
  Main() : void
  {
    _ = Process.Start(MakePage());
    //WriteLine("Press enter to exit...");
    //_ = ReadLine();
  }
}