using Nemerle.IO;

class A {}
class B : A {}
class C : B { public this () {} }
 
module M {
  f (_ : A, _ : B) : void {}
  f (_ : B, _ : A) : void { printf ("OK\n") }
  public Main () : void {
    f (C (), C ());     // E: overloading resolution ambiguity
  }
}


using M1;
using M2;

interface I1 {}
interface I2 {}
interface I : I1, I2 {}

class MM {
  static f (_ : I1) : void {}
  static f (_ : I2) : void {}
  static m (a : I) : void { MM.f (a) }    // E: overloading resolution ambiguity
}

class M1 {
  public static g (_ : I) : void {}
}

class M2 {
  public static g (_ : I) : void {}
}

class M3 {
  static h (a : I) : void { g(a) }    // E: overloading resolution ambiguity
}
