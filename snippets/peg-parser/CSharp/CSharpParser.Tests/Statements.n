using System;
using SCG = System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Utility;

using NUnit.Framework;

using CSharpParser.TestMacros;

namespace CSharpParser.Tests {

  [
    TestFixture,

    Accepts("EMPTY statement",
    <#
    static class Program {
        static void Main() {
            ;
            do ; while(true);
        }
    }
    #>),

    Accepts("IF statement",
    <#
    static class Program {
        static void Main() {
            var x = true;
            if(x) { return null; } else {}
            if(x) return null; // no else
        }
    }
    #>),

    Accepts("SWITCH-GOTO statement",
    <#
    static class Program {
        static void Main() {
            LOOP:
            switch(x) {
              case 0:
                goto default;

              case 1:
              case 2:
                goto case 0; // fails here :(

              default:
                goto LOOP;
            }
        }
    }
    #>),

    Accepts("TRY-THROW statement",
    <#
    static class Program {
        static void Main() {
            try {
              var x = null;
              throw x;
            } catch(XXX) {
              ;
            } catch(YYY y) {
              ;
            } catch {
              ;
            } finally {
              ;
            }

            try {
              ;
            } finally {
              ;
            }
        }
    }
    #>),

    Accepts("FOR statement",
    <#
    static class Program {
        static void Main() {
            for(;;) ;
            for(int i = 0;;) { ; if(cond) continue; }
        }
    }
    #>),

    Accepts("FOREACH-YIELD statement",
    <#
    static class Program {
        static IEnumerable<int> Main() {
            foreach(var x in y) {
               if(cond)
                   yield return x;
            }
        }
    }
    #>),

    Accepts("USING statement",
    <#
    static class Program {
        static IEnumerable<int> Main() {
            using(var x = y) ;
            using(X x = y) { ; }
        }
    }
    #>),

  ]
  public class Statements { }

}