// Compiler options:   

using System;

[Obsolete]
class ObsoleteClass
{
}

public class Test
{
	private  mutable  _name : string;

	[Obsolete()]
	public this()
	{  this("layout", false); // W: method Test..ctor.* is obsolete
	}

	[Obsolete()]
	public this( a : string, _writeToErrorStream :  bool)
	{
		Name = a; // W: property `Test.Name' is obsolete
	}

	[Obsolete()]
	public Name : string
	{
		get {  _name; }
		set { _name = value; }
	}
}

[Obsolete]
public class DerivedTest : Test
{
         mutable  member : ObsoleteClass; // W: ObsoleteClass is obsolete
    
        [Obsolete]
	public this( a : string)
        {  base(a, false); // W: method Test..* is obsolete
		Name = a; // W: property `Test.Name' is obsolete
	}
        
        public Method () :  string
        {
             base.Name; // W: property `Test.Name' is obsolete
        }
        
        public static Main () :  void {}
}

[Obsolete] // W: ObsoleteClass is obsolete
class ObsoleteClass2: ObsoleteClass
{
}
/*
BEGIN-OUTPUT
END-OUTPUT
*/
