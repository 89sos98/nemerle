
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Compiler.Typedtree;
using Nemerle.IO;
using Nemerle.Late;
using Nemerle.Utility;
using System.IO;

using PT = Nemerle.Compiler.Parsetree;  
using SR = System.Reflection;
using SRE = System.Reflection.Emit;
using SCG = System.Collections.Generic;

namespace Nemerle.Compiler.Sre
{
  [Record]
  public class SreExternalType : ExternalType
  {
    library : LibraryReference;

    public override ConstructTypeInfo (node : NamespaceTree.Node, fix_node : bool) : void
    {
      when (tycon == null)
        tycon = library.ConstructTypeInfo (system_type, node);
      when (fix_node)
        node.Value = NamespaceTree.TypeInfoCache.Cached (tycon);
    }
  }
}