

#if FOO || ALL
#line 0
class Foo
{
  public SomeMethod () : void
  {
    /** ... */
  }
  private some_other_method (_x : int) : void
  {
    /** ... */
  }
  private Frobnicate (_x : int, _y : string) : int  
  {
    /** ... */
    0
  }
  internal foo_bar () : void
  {
    /** ... */
  }
}
#line default
#endif

#if BAR || ALL
#line 0
class Bar
{
  public mutable qux : int;
  private quxx : int;
  mutable bar : float;
}
#line default
#endif

#if HELLO || ALL
#line 0
class Hello
{
  public static Main () : void
  {
    System.Console.WriteLine ("Hello cruel world!")
  }
}
#line default
#endif

#define OMMIT
class Fibonacci1 {
#undef OMMIT
#if FIBONACCI1 || ALL
#line 0
fib (n : int) : int
{
  if (n < 2)
    1
  else
    fib (n - 1) + fib (n - 2)
}
#line default
#endif
#define OMMIT
}
#undef OMMIT

#define OMMIT
class Fibonacci2 {
#undef OMMIT
#if FIBONACCI2 || ALL
#line 0
fib (n : int) : int
{
  mutable last1 = 1;
  mutable last2 = 1;
  
  for (mutable cur = 1; cur < n; ++cur) {
    def tmp = last1 + last2;
    last1 = last2;
    last2 = tmp;
  }

  last2
}
#line default
#endif
#define OMMIT
}
#undef OMMIT

