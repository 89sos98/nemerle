module Foo {

  foo ['a] (a : 'a) : 'a
    {
      def bar ['b] (a : 'a, b : 'b) : 'a * 'b {
        ((a : 'a), (b : 'b))
      };
      def (x, y) = bar (a, 1);
      def _ = x;
      def _ = y;
      def (x, y) = bar (a, "qux");
      def _ = y;
      x
    }

  Main () : void {
    assert (1 == foo (1));
    assert (A (object()).ret () == null);
  }
}


class A ['a] where 'a : class {
  public this (_ : 'a) { }
  
  public ret () : 'a {
    null
  }
}


class B ['a] {
    f():void {
        _ = list[int].Nil() : list[int]; // works
        _ = list.Nil() : list[int]; // fails
        _ = [1]; // fails
    }
}

namespace Bug995 {
// also #982
public interface IFoo[T]{}

public class Bar[T1, T2]
    where T2 :  struct, IFoo[T1]
{}
}

/*
BEGIN-OUTPUT
END-OUTPUT
*/
