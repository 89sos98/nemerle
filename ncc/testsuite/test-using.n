using Nemerle.IO;

module M {
  public class Disposable : System.IDisposable
  {
          public this() {}

          private Dispose() : void
                  implements System.IDisposable.Dispose
          {
                  System.Console.WriteLine("Disposing.");
          }
  }

  
  class Disposer : System.IDisposable {
    str : string;
    
    public this (str : string) 
    { printf ("I'm being created - %s\n", str);
      this.str <- str; 
    }
    
    public Dispose () : void 
    { printf ("I'm being disposed - %s\n", this.str); }
  }

  public Main () : void {
   
    printf("Testing using...\n");
    using (a = Disposer("one"), Disposer("two"), c = Disposer("three")) {
      printf("Inside\n");
    };
    using(x = Disposable()) {};

    def y = Disposable();
    using(y) {};
   
  }
}

/*
BEGIN-OUTPUT
Testing using...
I'm being created - two
I'm being created - one
I'm being created - three
Inside
I'm being disposed - three
I'm being disposed - two
I'm being disposed - one
Disposing.
Disposing.
END-OUTPUT
*/
