using System;
using SCG = System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Utility;

using NUnit.Framework;

using CSharpParser.TestMacros;
namespace CSharpParser.Tests {

  [
    TestFixture,
    Accepts("op 1",
    <#
    class Foo {
      public static implicit operator System.String(Foo foo) { }
      public static extern explicit operator Foo(System.String str);
    }
    #>),

    Accepts("op 2, binary",
    <#
    class Foo {
      public static System.String operator +(Foo a, Foo b) { }
      //public static bool operator <(Foo a, Foo b) { }
    }
    #>),

    Accepts("op 2, unary",
    <#
    class Foo {
      public static System.String operator ++(Foo foo) { }
      public static System.String operator !(Foo foo) { }
    }
    #>),


    Rejects("op 1",
    <#
    class Foo {
      // mistyped: operator <--> implicit
      public static operator implicit System.String(Foo foo) { }
    }
    #>),

    Rejects("op 2",
    <#
    class Foo {
      // no operator #
      public static System.String operator #(Foo a, Foo b) { }
    }
    #>),

  ]
  public class Operators {

  }

}