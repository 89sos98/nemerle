enum E {
  | A
  | B
}
 
[Record]
class Boo {
   public x : E;
   public y : list [int];  
}
 
module Mai {
  Main () : void {
    match (Boo (E.A, [])) {
      | { y = E.B } => ()  // E: a type E doesn't subtype Nemerle.Core.list
      | _ => ()
    }
    def _x = 4;
    match (5) {
      | _x + 1 => ();  // E: couldn't fold arithmetic expression
      | _ => ()
    }
  }
}
 
 
