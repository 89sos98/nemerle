module M {
  'a run (f : 'a -> int, x : 'a) : int { f (x) }

  fst1 (a : int, _ : int) : int { a }
  fst2 (p : int * int) : int { def (a, _) = p; a }
  snd1 (_ : int, b : int) : int { b }
  snd2 (p : int * int) : int { def (_, b) = p; b }

  print_int (x : int) : void { print_string (string_of_int (x)) }
  
  Main () : void {
    def fst3 (a : int, _ : int) : int { a };
    def fst4 (p : int * int) : int { def (a, _) = p; a };
    def snd3 (_ : int, b : int) : int { b };
    def snd4 (p : int * int) : int { def (_, b) = p; b };
  
    print_int (run (fst1, (1, 10)));
    print_int (run (fst2, (2, 10)));
    print_int (run (fst3, (3, 10)));
    print_int (run (fst4, (4, 10)));
    print_int (run (snd1, (10, 5)));
    print_int (run (snd2, (10, 6)));
    print_int (run (snd3, (10, 7)));
    print_int (run (snd4, (10, 8)));
    print_string ("\n");
    print_int (fst1 (1, 10));
    print_int (fst2 (2, 10));
    print_int (fst3 (3, 10));
    print_int (fst4 (4, 10));
    print_int (snd1 (10, 5));
    print_int (snd2 (10, 6));
    print_int (snd3 (10, 7));
    print_int (snd4 (10, 8));
    print_string ("\n");
    //print_int (fst1 ((1, 10)));
    //print_int (fst2 ((2, 10)));
    print_int (fst3 ((3, 10)));
    print_int (fst4 ((4, 10)));
    //print_int (snd1 ((10, 5)));
    //print_int (snd2 ((10, 6)));
    print_int (snd3 ((10, 7)));
    print_int (snd4 ((10, 8)));
    print_string ("\n")
  }
}

(*
BEGIN-OUTPUT
12345678
12345678
3478
END-OUTPUT
*)
