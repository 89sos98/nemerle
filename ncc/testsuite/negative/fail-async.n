using Nemerle.IO;
using Nemerle.Concurrency;

module Test
{
    class A
    {
        mutable i : int = 0;
        
        [Async]
        public M () : void
        {
            while (i == 0) ();
            printf ("OK\n");
            i
        }

        public N () : void
        {
            i = 1;
        }
    }

    Main () : void
    {
        def a = A ();
        a.M ();

        mutable x = 0;

        async 
        { // E: asynchronous expresion was expected to have type void while it has int
            while (x == 0) ();
            assert (x == 1);
            x = 2;
            x
        }

        x = 1;
        while (x == 1) ();
        assert (x == 2);

        printf ("%d\n", x);
        a.N ()
    }
}
