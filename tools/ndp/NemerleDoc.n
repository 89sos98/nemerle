using NemerleDoc;
using System;

module Nemerledoc {


  /// <exception cref="TestException">
  /// This is a test comment.
  /// </exception>
  /// <remarks>This function is for testing purposes only; to test all tags</remarks>
  /// <summary>Test list tag.
  /// <list type="table">
  /// <listheader>
  /// <term>This program</term><description>does</description>
  /// </listheader>
  /// <item><term>if XML file is an argument</term><description>analyzes this file</description></item>
  /// <item><term>if dll file is an argument</term><description>analyzes this file</description></item>
  /// </list>
  /// End of list tag test. But there is some value:
  /// <value>this is value</value>
  /// </summary>
  /// <permission cref="System.Security.PermissionSet">Public Access</permission>
  /// <param name="arg1">This is arg1</param>
  /// <param name="arg2">This is arg2</param>
  /// <param name="arg3">This is arg3</param>
  /// <example>This is example;
  /// <code>
  ///    $ mono nemerledoc.exe
  /// </code>
  /// with arguments.
  /// </example>
  /// <returns>This function returns nothing</returns>
  /// <seealso cref="AnyThing"/>
  /// <include file="NoFile.xml" path="/doc/members/member/*"/>
  public _foo () : void {}
  
  Help () : void {
    Console.WriteLine("USAGE:");
    Console.WriteLine("  nemerledoc.exe <options> <files>");
    Console.WriteLine("     <options>: -np show non public elements");
    Console.WriteLine("     <files>: a list of *.dll and *.xml files");
  }

  /// <summary>
  /// Usage:
  /// <code>nemerledoc.exe &amp;lt;options&amp;gt; &amp;lt;files&amp;gt;</code>
  /// Writing <c>nemerledoc.exe</c> shows this info. 
  /// </summary>
  public Main(arg : array [ string ]) : void
  {
    def tree = DataTree();
    if (arg.Length == 0) Help();
    else {
        mutable publicOnly = true;
        foreach (file in arg)
        {
          when (file.EndsWith(".dll") || file.EndsWith(".exe"))
            AssemblyAnalyzer.analyze(file, tree);
        
          when (file.EndsWith(".xml"))
            _ = MyXmlHandler(tree, file);
      
          if (file.Equals("-np")) publicOnly = false
          else tree.AddSource(file);
        }
        
        tree.ToHtml(publicOnly);
    }
  }
}
