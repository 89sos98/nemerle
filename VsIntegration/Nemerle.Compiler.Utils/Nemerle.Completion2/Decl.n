using Nemerle.Compiler;
using Nemerle.Utility;
using Nemerle.Compiler.Parsetree;

namespace Nemerle.Completion2
{
  [Record]
  public variant Decl
  {
    | GlobalAttribute { }
    | Using
      {
        Name                  : list[string];
        mutable NameLocations : list[Location];
        Alias                 : string;
        mutable AliasLocation : Location;
        BeforeEnv             : GlobalEnv;
        AfterEnv              : GlobalEnv;
      }
    | Namespace
      {
        mutable Decls         : list[Decl];
        Name                  : list[string];
        mutable NameLocations : list[Location];
        OutsideEnv            : GlobalEnv;
        InsideEnv             : GlobalEnv;
        mutable BodyLocation  : Location;
        /// TopDeclaration-s of file. Exists only in top namespace.
        TopDeclarations       : list[TopDeclaration];
      }
    | Type { Ast              : TopDeclaration; }
    | None

    [Accessor (flags = WantSetter)]
    mutable _location : Location;
    
    public override ToString() : string
    {
      match (this)
      {
        | GlobalAttribute   => "<attribute>"
        | Using     as decl => "using " + decl.Name.ToString(".") + ";"
        | Namespace as decl => "namespace " + decl.Name.ToString(".") + " { ... }"
        | None              => "<none>"
        | Type(typeBuilder) => typeBuilder.ToString()
      }
    }
  }
}
