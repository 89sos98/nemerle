<?xml version='1.0' encoding='UTF-8' ?>
<document xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Core-Nem grammar</title>
  <section id="intro">
    <title>Introduction</title>
    <body>
      <p>
        This document includes Core-Nem grammar with small comments (one, two sentences
        for each production; please refer to <link>coreNemDesc.html</link>
        for more info).
      </p>
      <p>
        Grammar described here is still subject to change, although
        its basic shape should remain.
      </p>
    </body>
  </section>
  <section id="lexical">
    <title>Lexical Conventions</title>
    <body>
      <p>
        Programs are written using the Unicode character set.  Every
        nemerle source file is reduced to a sequence of lexical units
        (tokens).
      </p>
    </body>
    <subsection id="tokens">
      <title>Tokens</title>
      <body>
        <p>
	  There are five classes of lexical tokens: identifiers,
	  keywords, constants, strings, and separators.  Spaces, 
	  vertical, and horizontal tabulation characters, new-page,
	  and new-line characters, and comments (called blanks
	  altogether) are discarded, unless they separate other
	  lexical tokens. 
	</p>
      </body>
    </subsection>
    <subsection id="comments">
      <title>Comments</title>
      <body>
        <p>
	  A traditional comment begin with <tt>(*</tt>, and end with
	  <tt>*)</tt>.  A end-of-line comment begin with <tt>//</tt>,
	  and end with line terminator (ASCII LF character).
	</p>
      </body>
    </subsection>
    <subsection id="identifiers">
      <title>Identifiers</title>
      <body>
        <p>
	  Ordinary identifiers consist of letters, digits, and
	  underscores, but cannot begin with a digit.  Identifiers may
	  be quoted with two apostrophe characters (<tt>`</tt>), which
	  are stripped. Apostrophes remove any lexical and syntactic
	  meaning from the enclosed string, thus enabling programmer
	  to use keywords as identifier or even some special characters.
	</p>
	<p>
	  Symbolic identifiers consist of following characters: 
          <tt>=</tt>, <tt>&lt;</tt>, <tt>&gt;</tt>, <tt>@</tt>,
          <tt>^</tt>, <tt>|</tt>, <tt>&amp;</tt>, <tt>+</tt>, <tt>-</tt>,
          <tt>*</tt>, <tt>/</tt>, <tt>$</tt>, <tt>%</tt>, <tt>!</tt>,
          <tt>?</tt>, <tt>~</tt>, <tt>.</tt>, <tt>:</tt>, <tt>#</tt>.
          Symbolic identifiers may be used, wherever ordinary
	  identifiers may, but have additional property of being used
	  as infix operators.
	</p>
      </body>
    </subsection>
    <subsection id="keywords">
      <title>Keywords</title>
      <body>
        <p>
	  Following identifiers are used as keywords, and may not be
	  used in any other context unquoted:
          <tt>abstract</tt>, <tt>and</tt>, <tt>as</tt>, <tt>base</tt>,
          <tt>class</tt>, <tt>const</tt>, <tt>else</tt>,
          <tt>enum</tt>, <tt>extends</tt>, <tt>extern</tt>,
          <tt>field</tt>, <tt>finally</tt>, <tt>fun</tt>, <tt>if</tt>,
          <tt>implements</tt>, <tt>in</tt>, <tt>interface</tt>,
          <tt>internal</tt>, <tt>let</tt>, <tt>letfun</tt>,
          <tt>match</tt>, <tt>method</tt>, <tt>namespace</tt>,
          <tt>new</tt>, <tt>null</tt>, <tt>open</tt>, <tt>out</tt>,
          <tt>private</tt>, <tt>protected</tt>, <tt>public</tt>,
          <tt>raise</tt>, <tt>record</tt>, <tt>ref</tt>, <tt>sealed</tt>,
          <tt>struct</tt>, <tt>then</tt>, <tt>this</tt>, <tt>try</tt>,
          <tt>tymatch</tt>, <tt>type</tt>, <tt>value</tt>, <tt>void</tt>,
          <tt>volatile</tt>, <tt>where</tt>, <tt>with</tt>, <tt>=</tt>,
          <tt>?</tt>, <tt>|</tt>, <tt>&lt;-</tt>, <tt>-&gt;</tt>,
          <tt>=&gt;</tt>.
	</p>
      </body>
    </subsection>
  </section>
  <section id="gram">
    <title>The grammar</title>
    <xi:include href="../coreNemGrammar.xml" />
  </section>
    <!-- 
    <subsection id="">
      <title></title>
      <body>
        <p>
        </p>
      </body>
    </subsection>
  <section id="">
    <title></title>
    <body>
      <p>
      </p>
    </body>
  </section>
  -->
</document>

<!-- vim: expandtab sw=2
  -->
