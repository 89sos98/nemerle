open Nemerle.Collections;

open Nemerle.Compiler;
open Nemerle.Compiler.Tyvars;

namespace Nemerle.Compiler {

  class Tyvars
    {
      record Tyvar
        {
          name : string;
          ref constraints : list (Type);
        }
        
      value ref tyvars : Int_map(Tyvar);
      
      fun this () { tyvars <- Map.int_map(); }

      fun add (name : string) : int =
        let id = Util.next_id() in {
          tyvars <- tyvars#add(id, Tyvar(name, Nil()));
          id
        };

      fun add_constraint (id : int, ty : Type) : void =
        match tyvars#find(id) with [
          | Some (?tv) => tv#constraints <- Cons(ty, tv#constraints)
          | None => Util.ice()
        ];
    }

} // end ns
