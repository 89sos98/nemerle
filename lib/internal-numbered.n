/*
 * Copyright (c) 2003, 2004 The University of Wroclaw.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. The name of the University may not be used to endorse or promote
 *       products derived from this software without specific prior
 *       written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
 * NO EVENT SHALL THE UNIVERSITY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

using Nemerle.Extensions;
 
// note that the fact that Tuple2 and 3 are structs
// is also needed in MType.IsValueType

namespace Nemerle.IntTypes {
public abstract class FuncNew0 ['r] : FuncNew1 [System.Object, 'r]
{
  public abstract apply () : 'r;
  public override apply (_ : System.Object) : 'r { apply () }
}

public abstract class FuncVoid0 : FuncNew0 [System.Object]
{
  public abstract apply_void () : void;
  public override apply () : System.Object { apply_void (); null }
}

public abstract class FuncNew1 ['p1, 'r]
{
  public abstract apply (_ : 'p1) : 'r;
}

public abstract class FuncVoid1 ['p1] : FuncNew1 ['p1, System.Object]
{
  public abstract apply_void (_ : 'p1) : void;
  public override apply (p1 : 'p1) : System.Object { apply_void (p1); null }
}

public abstract class FuncNew2 ['p1, 'p2, 'r] : FuncNew1 [Tuple2 ['p1, 'p2], 'r]
{
  public abstract apply (_ : 'p1, _ : 'p2) : 'r;
  public override apply (o : Tuple2 ['p1, 'p2]) : 'r { apply (o.field0, o.field1) }
}

public abstract class FuncVoid2 ['p1, 'p2] : FuncVoid1 [Tuple2 ['p1, 'p2]]
{
  public abstract apply_void (_ : 'p1, _ : 'p2) : void;
  public override apply_void (o : Tuple2 ['p1, 'p2]) : void { 
    apply_void (o.field0, o.field1); 
  }
}


  [System.Serializable,
   Record,
   StructuralEquality,
   TupleToString,
   StructuralHashCode]
  public struct Tuple2 ['p0, 'p1]
  {
    public field0 : 'p0;
    public field1 : 'p1;
  }

public abstract class FuncNew3 ['p1, 'p2, 'p3, 'r] : FuncNew1 [Tuple3 ['p1, 'p2, 'p3], 'r]
{
  public abstract apply (_ : 'p1, _ : 'p2, _ : 'p3) : 'r;
  public override apply (o : Tuple3 ['p1, 'p2, 'p3]) : 'r { apply (o.field0, o.field1, o.field2) }
}

public abstract class FuncVoid3 ['p1, 'p2, 'p3] : FuncNew3 ['p1, 'p2, 'p3, System.Object]
{
  public abstract apply_void (_ : 'p1, _ : 'p2, _ : 'p3) : void;
  public override apply (p1 : 'p1, p2 : 'p2, p3 : 'p3) : System.Object { apply_void (p1, p2, p3); null }
}


  [System.Serializable,
   Record,
   StructuralEquality,
   TupleToString,
   StructuralHashCode]
  public struct Tuple3 ['p0, 'p1, 'p2]
  {
    public field0 : 'p0;
    public field1 : 'p1;
    public field2 : 'p2;
  }

public abstract class FuncNew4 ['p1, 'p2, 'p3, 'p4, 'r] : FuncNew1 [Tuple4 ['p1, 'p2, 'p3, 'p4], 'r]
{
  public abstract apply (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4) : 'r;
  public override apply (o : Tuple4 ['p1, 'p2, 'p3, 'p4]) : 'r { apply (o.field0, o.field1, o.field2, o.field3) }
}

public abstract class FuncVoid4 ['p1, 'p2, 'p3, 'p4] : FuncNew4 ['p1, 'p2, 'p3, 'p4, System.Object]
{
  public abstract apply_void (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4) : void;
  public override apply (p1 : 'p1, p2 : 'p2, p3 : 'p3, p4 : 'p4) : System.Object { apply_void (p1, p2, p3, p4); null }
}


  [System.Serializable,
   Record,
   StructuralEquality,
   TupleToString,
   StructuralHashCode,
   DisableImplicitConstructor]
  public sealed class Tuple4 ['p0, 'p1, 'p2, 'p3]
  {
    public field0 : 'p0;
    public field1 : 'p1;
    public field2 : 'p2;
    public field3 : 'p3;
  }

public abstract class FuncNew5 ['p1, 'p2, 'p3, 'p4, 'p5, 'r] : FuncNew1 [Tuple5 ['p1, 'p2, 'p3, 'p4, 'p5], 'r]
{
  public abstract apply (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4, _ : 'p5) : 'r;
  public override apply (o : Tuple5 ['p1, 'p2, 'p3, 'p4, 'p5]) : 'r { apply (o.field0, o.field1, o.field2, o.field3, o.field4) }
}

public abstract class FuncVoid5 ['p1, 'p2, 'p3, 'p4, 'p5] : FuncNew5 ['p1, 'p2, 'p3, 'p4, 'p5, System.Object]
{
  public abstract apply_void (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4, _ : 'p5) : void;
  public override apply (p1 : 'p1, p2 : 'p2, p3 : 'p3, p4 : 'p4, p5 : 'p5) : System.Object { apply_void (p1, p2, p3, p4, p5); null }
}


  [System.Serializable,
   Record,
   StructuralEquality,
   TupleToString,
   StructuralHashCode,
   DisableImplicitConstructor]
  public sealed class Tuple5 ['p0, 'p1, 'p2, 'p3, 'p4]
  {
    public field0 : 'p0;
    public field1 : 'p1;
    public field2 : 'p2;
    public field3 : 'p3;
    public field4 : 'p4;
  }

public abstract class FuncNew6 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'r] : FuncNew1 [Tuple6 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6], 'r]
{
  public abstract apply (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4, _ : 'p5, _ : 'p6) : 'r;
  public override apply (o : Tuple6 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6]) : 'r { apply (o.field0, o.field1, o.field2, o.field3, o.field4, o.field5) }
}

public abstract class FuncVoid6 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6] : FuncNew6 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, System.Object]
{
  public abstract apply_void (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4, _ : 'p5, _ : 'p6) : void;
  public override apply (p1 : 'p1, p2 : 'p2, p3 : 'p3, p4 : 'p4, p5 : 'p5, p6 : 'p6) : System.Object { apply_void (p1, p2, p3, p4, p5, p6); null }
}


  [System.Serializable,
   Record,
   StructuralEquality,
   TupleToString,
   StructuralHashCode,
   DisableImplicitConstructor]
  public sealed class Tuple6 ['p0, 'p1, 'p2, 'p3, 'p4, 'p5]
  {
    public field0 : 'p0;
    public field1 : 'p1;
    public field2 : 'p2;
    public field3 : 'p3;
    public field4 : 'p4;
    public field5 : 'p5;
  }

public abstract class FuncNew7 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'r] : FuncNew1 [Tuple7 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7], 'r]
{
  public abstract apply (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4, _ : 'p5, _ : 'p6, _ : 'p7) : 'r;
  public override apply (o : Tuple7 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7]) : 'r { apply (o.field0, o.field1, o.field2, o.field3, o.field4, o.field5, o.field6) }
}

public abstract class FuncVoid7 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7] : FuncNew7 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, System.Object]
{
  public abstract apply_void (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4, _ : 'p5, _ : 'p6, _ : 'p7) : void;
  public override apply (p1 : 'p1, p2 : 'p2, p3 : 'p3, p4 : 'p4, p5 : 'p5, p6 : 'p6, p7 : 'p7) : System.Object { apply_void (p1, p2, p3, p4, p5, p6, p7); null }
}


  [System.Serializable,
   Record,
   StructuralEquality,
   TupleToString,
   StructuralHashCode,
   DisableImplicitConstructor]
  public sealed class Tuple7 ['p0, 'p1, 'p2, 'p3, 'p4, 'p5, 'p6]
  {
    public field0 : 'p0;
    public field1 : 'p1;
    public field2 : 'p2;
    public field3 : 'p3;
    public field4 : 'p4;
    public field5 : 'p5;
    public field6 : 'p6;
  }

public abstract class FuncNew8 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'p8, 'r] : FuncNew1 [Tuple8 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'p8], 'r]
{
  public abstract apply (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4, _ : 'p5, _ : 'p6, _ : 'p7, _ : 'p8) : 'r;
  public override apply (o : Tuple8 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'p8]) : 'r { apply (o.field0, o.field1, o.field2, o.field3, o.field4, o.field5, o.field6, o.field7) }
}

public abstract class FuncVoid8 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'p8] : FuncNew8 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'p8, System.Object]
{
  public abstract apply_void (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4, _ : 'p5, _ : 'p6, _ : 'p7, _ : 'p8) : void;
  public override apply (p1 : 'p1, p2 : 'p2, p3 : 'p3, p4 : 'p4, p5 : 'p5, p6 : 'p6, p7 : 'p7, p8 : 'p8) : System.Object { apply_void (p1, p2, p3, p4, p5, p6, p7, p8); null }
}


  [System.Serializable,
   Record,
   StructuralEquality,
   TupleToString,
   StructuralHashCode,
   DisableImplicitConstructor]
  public sealed class Tuple8 ['p0, 'p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7]
  {
    public field0 : 'p0;
    public field1 : 'p1;
    public field2 : 'p2;
    public field3 : 'p3;
    public field4 : 'p4;
    public field5 : 'p5;
    public field6 : 'p6;
    public field7 : 'p7;
  }

public abstract class FuncNew9 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'p8, 'p9, 'r] : FuncNew1 [Tuple9 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'p8, 'p9], 'r]
{
  public abstract apply (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4, _ : 'p5, _ : 'p6, _ : 'p7, _ : 'p8, _ : 'p9) : 'r;
  public override apply (o : Tuple9 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'p8, 'p9]) : 'r { apply (o.field0, o.field1, o.field2, o.field3, o.field4, o.field5, o.field6, o.field7, o.field8) }
}

public abstract class FuncVoid9 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'p8, 'p9] : FuncNew9 ['p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'p8, 'p9, System.Object]
{
  public abstract apply_void (_ : 'p1, _ : 'p2, _ : 'p3, _ : 'p4, _ : 'p5, _ : 'p6, _ : 'p7, _ : 'p8, _ : 'p9) : void;
  public override apply (p1 : 'p1, p2 : 'p2, p3 : 'p3, p4 : 'p4, p5 : 'p5, p6 : 'p6, p7 : 'p7, p8 : 'p8, p9 : 'p9) : System.Object { apply_void (p1, p2, p3, p4, p5, p6, p7, p8, p9); null }
}


  [System.Serializable,
   Record,
   StructuralEquality,
   TupleToString,
   StructuralHashCode,
   DisableImplicitConstructor]
  public sealed class Tuple9 ['p0, 'p1, 'p2, 'p3, 'p4, 'p5, 'p6, 'p7, 'p8]
  {
    public field0 : 'p0;
    public field1 : 'p1;
    public field2 : 'p2;
    public field3 : 'p3;
    public field4 : 'p4;
    public field5 : 'p5;
    public field6 : 'p6;
    public field7 : 'p7;
    public field8 : 'p8;
  }
}
