using System;
using System.IO;
using System.Xml;
using ICSharpCode.SharpDevelop.Internal.Templates;
using ICSharpCode.SharpDevelop.Project;
using ICSharpCode.TextEditor.Document;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

namespace Nemerle.SharpDevelop {

    /// <summary>
    /// Description of NemerleProject.
    /// </summary>
    public class NemerleLanguageBinding : ILanguageBinding {
    
        static this() {
            def addin_dir = Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location);
            def mode_provider = FileSyntaxModeProvider(Path.Combine(addin_dir, "Resources"));
            HighlightingManager.Manager.AddSyntaxModeFileProvider(mode_provider);
        }
    
        protected internal static LanguageName : string {
            get { "Nemerle" }
        }
        
        public Language : string {
            get { NemerleLanguageBinding.LanguageName }
        }

        public LoadProject(provider : IMSBuildEngineProvider, fileName : string, projectName : string) : IProject {
            NemerleProject(provider, fileName, projectName);
        }

        public CreateProject(info : ProjectCreateInformation) :IProject {
            NemerleProject(info);
        }
    }

}
