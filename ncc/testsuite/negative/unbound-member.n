namespace N1 {
class C {
  public mutable x : int;
  public m () : void {}
}

class M {
  static main () : void {
    def c = (null : C);
    c.x = 3; // OK
    Foo.Bar.baz;        // E: unbound name `Foo.Bar.baz'
    M.quxx;           // E: unbound name `M.quxx'
    c.y = 3    // E: there is no member named `y' in N1.C
  }

  static f (c : C) : void { c.m = 3 }    // E: .*read-only
}


class M1 {
  fld : int;
  meth () : void {}
  static g () : void { def x = 1; x = M.fld }    // E: unbound name `M.fld'
  static h () : void { def x = 1; x = M.meth }    // E: unbound name `M.meth'
}


class Cxyz {
  public foo () : void
  {
  }
}

class M2 {
  public bar (): void
  {
    Cxyz.foo (); // E: trying to access an instance member N1.Cxyz.foo without an object
  }
}
}

namespace N2 {
module X {
  public Foo () : void {}
}

class C {
  this () {}
  public Foo () : void {}
}

class D {
  public this () {}
  public this (_ : int) {}
}

module M {
qux1 () : void {
  X.Foo1 (); // E: unbound name `X.Foo1'
  C.Foo (); // E: C.Foo
}

qux () : void
{
  D.Foo (); // E: unbound name `D.Foo'
} 
}
}
