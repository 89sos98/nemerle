using System;
using SCG = System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Utility;

namespace CSharpParser
{
  public enum OrderDirection 
  {
    | Default
    | Asc
    | Desc
  }

  [Record]
  public variant QueryExpr
  {
    | From {  variable      : Identifier;
              variableType  : TypeRef;
              expr          : Expr; }
    | Let { variable  : Identifier;
            expr      : Expr; }
    | Where { expr : Expr; }
    | Join { variable     : Identifier;
             variableType : TypeRef;
             expr         : Expr;
             leftExpr     : Expr;
             rightExpr    : Expr;
             into         : Identifier; }
    | Order { orderings : list[Expr * OrderDirection]; }
    | Select { expr : Expr; }
    | Group { expr      : Expr;
              partition : Expr; }
    | Into {  variable  : Identifier;
              query     : list[QueryExpr] }
  }
}