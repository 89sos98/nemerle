using System;
using SCG = System.Collections.Generic;

using ICSharpCode.Core;
using ICSharpCode.Core.WinForms;
using ICSharpCode.SharpDevelop;
using ICSharpCode.SharpDevelop.Dom;
using ICSharpCode.SharpDevelop.Gui;
using ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor;
using ICSharpCode.TextEditor;
using ICSharpCode.TextEditor.Document;

using Nemerle.Assertions;
using Nemerle.Utility;
using Nemerle.SharpDevelop.CodeCompletion;

namespace Nemerle.SharpDevelop.Editor {

    public class NemerleSourceDisplayBinding : TextEditorDisplayBinding {

        public override CreateContentForFile(file : OpenedFile) : IViewContent {
            def view = base.CreateContentForFile(file) :> TextEditorDisplayBindingWrapper;
            def document = view.GetDocumentForFile(file);
            def editor = view.TextEditorControl;

            EngineService.NotifyFileOpened(file.FileName, document, editor);

            view.Disposed += fun(_, _) {
                EngineService.NotifyFileClosed(document, editor);
            };

            view
        }

    }

}