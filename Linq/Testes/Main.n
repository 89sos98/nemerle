using System;
using System.Console;
using Nemerle.Utility;

using System.Linq;
using System.Linq.Expressions;
using Nemerle.Data.Linq;

module Program
{
		[Record]
		class User
		{
			[Accessor] _firstName : string;
			[Accessor] _lastName  : string;
			[Accessor] _age       : int;
			
			[Nemerle.OverrideObjectEquals]
			public Equals(other : User) : bool
			{
				     _firstName == other.FirstName
					&& _lastName  == other.LastName
					&& _age       == other.Age;
			}
			
			public override ToString() : string
			{
				$"User info: Name - '$_firstName $_lastName' Age - $_age"
			}
		}


  Main() : void
  {
    //WriteLine();
		//	def x = [User("Jack", "Jackson", 22), 
		//		User("Ivan", "Ivanov", 33), 
		//		User("Lee", "Wu", 44)];
			//def x = x.AsQueryable();
/*			def x = x.Where(ToExpression(x => x.Age > 25))
					.OrderByDescending(ToExpression(x : User => x.Age));
			def x = NCollectionsUtils.ToArray(x);*/
    //WriteLine(ToExpression(_.GetType(), true));
    //def x = Where(x, fun (z) { z.Age > 25 });
    //WriteLine($"..$x");
    //def x = Where(x, z => z.Age > 25 );
    //WriteLine($"..$x");
    _ = ReadLine();
  }
}
