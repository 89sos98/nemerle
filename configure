#! /bin/sh
#
# Copyright (c) 2003 The University of Wroclaw.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#    1. Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#    2. Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#    3. The name of the University may not be used to endorse or promote
#       products derived from this software without specific prior
#       written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
# NO EVENT SHALL THE UNIVERSITY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

############################################################
# VARIABLES
############################################################

# this variable is used to return values from functions
result=

config_log="configure.log"

python=
install="install"

prefix="/usr/local"
bindir="$prefix/bin"
mandir="$prefix/man"

csc_flags=/nowarn:162
outflag=/out:

tmp_dir=
cs_tmp_file=
cs_tmp_out=
nem_tmp_file=

############################################################
# FUNCTIONS
############################################################

abort () {

    echo
    echo
    echo "*** $@ ***"
    if test -f $config_log; then
	echo "*** Check $config_log for details. ***"
    fi
    echo
    echo "Aborting..."
    rm -f $config_mak
    exit 1
}

echo_check_for () {

    echo "--------------- Checking for $@ ---------------" >> $config_log
    echo -n "Checking for $@... "
}


echo_check_if () {

    echo "--------------- Checking if $@ ----------------" >> $config_log
    echo -n "Checking if $@... "
}


echo_result () {

    echo "Result: $@" >> $config_log
    echo "-----------------------------------------------" >> $config_log
    echo >> $config_log
    echo "$@"
}


# This function tries to execute command given as an argument and returns
# shell exit code.  If the program doesn't exist in a path shell returns
# 127.  If the program is not a valid executable shell returns 126.
# If the program lacks some arguments it usually returns 1, otherwise
# this function should return 0.
#
# E.g.
# try_execute cc --version
# if test $? = 0; then
#    echo "found"
# else
#    echo "not found"
# fi
try_execute () {

    echo "Trying execute: $@" >> $config_log
    $@ >> $config_log 2>&1
    ret=$?
    echo "Execution status code: $ret." >> $config_log
    return $ret;
}


# This function assumes that it is given a list of programs, that should be
# run one after another.  Then result holds name of the program that
# succeeded or nothing.
check_csc () {

    found=0
    for x in $@; do
	try_execute $x
	if test $? -lt 126; then
	    found=1
	    break
	fi
    done

    if test $found = 0; then
	result=
	echo_result "not found"
    else
	result="$x"
	echo_result "$x"
    fi
}


nem_try_compile () {
    echo "<<<<<<<<<<<<<<<" >> $config_log
    cat $nem_tmp_file >> $config_log
    echo ">>>>>>>>>>>>>>>" >> $config_log

    $engine $net_flags boot/ncc.exe lib/core.n $nem_tmp_file_aux >> $config_log 2>&1
    
    if test -f out.cs; then
	rm -f out.cs
	echo_result "yes"
	return 0
    else
	echo_result "no"
	return 1
    fi
}


cs_try_compile () {

    echo "<<<<<<<<<<<<<<<" >> $config_log
    cat $cs_tmp_file >> $config_log
    echo ">>>>>>>>>>>>>>>" >> $config_log

    rm -f $cs_tmp_out
    $csc ${outflag}${cs_tmp_out_aux} $cs_tmp_file_aux >> $config_log 2>&1
    rm -f $cs_tmp_file

    if test -f "$cs_tmp_out"; then
	return 0
    else
	return 1
    fi
}


cs_try_compile_and_run () {

    cs_try_compile
    
    if test -f "$cs_tmp_out"; then
	$engine $net_flags $cs_tmp_out
	if test "$?" -gt 0; then
	    echo_result "no"
	    return 1
	else
	    echo_result "yes"
	    return 0
	fi
    else
	echo_result "no"
	return 1
    fi
}


############################################################
# PARAMETERS SCAN
############################################################

for i in $@; do
    if test "$i" = "--help" || test "$i" = "-help" || test "$i" = "-h"; then
	cat << EOF

Usage: $0 [OPTIONS]...

Defaults for the options are specified in brackets.

Configuration:
  -h, --help            display this help and exit

Installation directories:
  --prefix=DIR          use this prefix for installing Nemerle [/usr/local]
  --bindir=DIR          use this prefix for installing executables 
                        [PREFIX/bin]
  --mandir=DIR          use this prefix for installing manpages [PREFIX/man]

Miscellaneous options:
  --net-engine=ENGINE   use this .NET engine
  --net-flags=FLAGS     pass these flags to .NET engine
  --csc=COMPILER        use this C# compiler
  --csc-flags=FLAGS     pass these flags to C# compiler [-nowarn:162]
  --install-path=PATH   the path to a custom install program

Optional features:
  --enable-debug        adds --debug to net-flags and -debug+ to csc-flags

EOF
	exit 0
    fi
done



for ac_option do

    case "$ac_option" in

	--prefix=*)
	    prefix=`echo $ac_option | cut -d '=' -f 2`
	    bindir="$prefix/bin"
	    mandir="$prefix/man"
	    ;;
	--bindir=*)
	    bindir=`echo $ac_option | cut -d '=' -f 2`
	    ;;
	--mandir=*)
	    mandir=`echo $ac_option | cut -d '=' -f 2`
	    ;;
	
	--net-engine=*)
	    engine=`echo $ac_option | cut -d '=' -f 2`
	    ;;
	--net-flags=*)
	    net_flags=`echo $ac_option | cut -d '=' -f 2`
	    ;;
	--csc=*)
	    csc=`echo $ac_option | cut -d '=' -f 2`
	    ;;
	--csc-flags=*)
	    csc_flags=`echo $ac_option | cut -d '=' -f 2`
	    ;;
	--install-path=*)
	    install=`echo $ac_option | cut -d '=' -f 2 | sed 's/\/$//'`"/install"
	    ;;
	--enable-debug)
	    csc_flags="$csc_flags -debug+"
	    net_flags="$net_flags --debug"
	    ;;
	*)
	    echo "Unknown parameter: $ac_option"
	    exit 1
	    ;;
    esac
done
	    


############################################################
# INITIALIZATION
############################################################

rm -f $config_log $config_mak

for tmp_dir in "$TMPDIR" "$TEMPDIR" "/tmp"; do
    if test -z $i; then
	continue
    fi
    if test -d $i; then
	break
    fi
done

cs_tmp_file="${tmp_dir}/nemerle-in$$.cs"
cs_tmp_out="${tmp_dir}/nemerle-out$$.exe"
nem_tmp_file="${tmp_dir}/nemerle-in$$.n"

if [ "X`cygpath -wp ${cs_tmp_file} 2>/dev/null`" != "X" ] ; then
  cs_tmp_file_aux=`cygpath -wp ${cs_tmp_file}`
  cs_tmp_out_aux=`cygpath -wp ${cs_tmp_out}`
  nem_tmp_file_aux=`cygpath -wp ${nem_tmp_file}`
else
  cs_tmp_file_aux=${cs_tmp_file}
  cs_tmp_out_aux=${cs_tmp_out}
  nem_tmp_file_aux=${nem_tmp_file}
fi

############################################################
# TESTS
############################################################


if test -f boot/ncc.exe; then
    true
elif test -f boot/ncc-boot.exe; then
    mv boot/ncc-boot.exe boot/ncc.exe
else
    echo "*** You need a working Nemerle compiler. ***"
    echo "*** http://nemerle.org/download/ncc-boot.exe ***"
    echo "*** Place it in boot/ncc.exe ***"
    abort "Haven't found Nemerle compiler."
fi



if test -z "$engine"; then
    echo_check_for ".NET environment"
    if test -x boot/ncc.exe; then
	true
    else
	chmod u+x boot/ncc.exe 2> /dev/null
    fi
    if try_execute boot/ncc.exe; then
	engine=none
	echo_result "none required"
    elif try_execute mono boot/ncc.exe; then
	engine=mono
	echo_result "mono"
    fi
fi
if test -z "$engine"; then
    abort "Haven't found any .NET environment on your system."
elif test "$engine" = none; then
    engine=
    net_flags=
fi



if test -z "$csc"; then
    echo_check_for "C# compiler"
    check_csc csc mcs cscc
    csc=$result
fi
if test -z "$csc"; then
    echo "*** Please ensure that the C# compiler is available as ***"
    echo "*** a single executable file, somewhere in PATH. ***"
    abort "Haven't found any C# compiler on your system."
fi



echo_check_if "Nemerle compiler works"
cat > $nem_tmp_file << EOF
class M {
    public static Main () : void {}
}
EOF
nem_try_compile
if test "$?" = 1; then
    abort "Nemerle compiler seems to be broken."
fi



echo_check_if "C# compiler works"
cat > $cs_tmp_file << EOF
class MainClass {
    public static void Main () {}
}
EOF
cs_try_compile_and_run
if test "$?" = 1; then
    abort "Your C# compiler seems to be broken."
fi



echo_check_for "Python version"
for i in python2.3 python; do
    str=`$i -V 2>&1`
    if test "$?" -gt 0; then
	continue
    fi
    
    ver=`echo $str | sed 's/.* \([0-9]\.[0-9]\).*/\1/g'`

    case $ver in
	2.3)
	    echo_result "$ver, ok"
	    python=$i
	    ;;
	*)
	    echo_result "$ver, too_old"
	    ;;
    esac
    break
done


echo_check_for "xspp"
try_execute xspp
if test $? -lt 126; then
    echo_result yes
else
    echo_result no
fi
xspp=xspp


echo_check_for "xsltproc"
try_execute xsltproc --version
if test $? -lt 126; then
    echo_result yes
else
    echo_result no
fi
xsltproc=xsltproc


echo_check_for "xmllint"
try_execute xmllint --version
if test $? -lt 126; then
    echo_result yes
else
    echo_result no
fi
xmllint=xmllint


############################################################
# CONFIG GENERATION
############################################################

echo "Creating config.mak"

cat > config.mak <<EOF
# Generated by configure

NET_ENGINE = $engine
NET_FLAGS  = $net_flags
CSC        = $csc
CSCFLAGS   = $csc_flags
OUTFLAG    = $outflag

PYTHON  = $python

INSTALL = $install

prefix  = $prefix
BINDIR  = $bindir
MANDIR  = $mandir

EOF
