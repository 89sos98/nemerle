using Nemerle.IO;

class Tailed {
  public foo (x : int, y : int) : int {
    if (x > 20000000) 
      y
    else
      foo (x + 1, (y + 1) % 220000);
  }
}

[Record]
class X {
  k : int;
  public foo () : void
  {
    if (k == 3) ()
    else X (3).foo ()
  }
}

module M {
  global_loop (acc : int, n : int) : int
  {
      if (n < 20000000)
        global_loop (acc + 5, n + 1)
      else
        acc
  }

  refing (x : ref int) : void {
    def y = array (10);
    for (mutable i = 0; i < 10; ++i) {
      y[x] = 4;
      for (mutable u = 0; u < 10; ++u) 
      for (mutable o = 0; o < 10; ++o) {
        def _ = u;
        ()
      }
    }
  }
  
  Main () : void {
    mutable sum = 0;
    for (mutable i = 0; i < 20000000; i = i + 1)
      sum = sum + 3;
    printf ("%d\n", sum);
    mutable i = 0;
    while (i < 20000000) {
      sum = sum + 7;
      i = i + 1
    };
    printf ("%d\n", sum);
    def loop (acc, n) {
      if (n < 20000000)
        loop (acc + 6, n + 1)
      else
        acc
    };
    sum = loop (sum, 0);
    printf ("%d\n", sum);
    sum = global_loop (sum, 0);
    printf ("%d\n", sum);
    def x = Tailed ();
    printf ("%d\n", x.foo (0, 0));

    X (30).foo ();
  }
}

/*
BEGIN-OUTPUT
60000000
200000000
320000000
420000000
200001
END-OUTPUT
*/
