/*
 * Copyright (c) 2003, 2004 The University of Wroclaw.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. The name of the University may not be used to endorse or promote
 *       products derived from this software without specific prior
 *       written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
 * NO EVENT SHALL THE UNIVERSITY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

using Nemerle.Collections;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler;

namespace Nemerle.Compiler
{
  module Delegates
  {
    /**
     * Generates a delegate class
     */
    internal GenerateDelegateClass (_ : GlobalEnv, parent_type : option <TypeBuilder>,
                                    _ : Modifiers, header : Fun_header) : void
    {
      def delegate_name = Macros.NameOfSString (header.name);

      def td =
        match (parent_type) {
          | Some (t) =>
            // FIXME: why can't I write ..$attrs instead of public? (I did filter static out)
            t.DefineNestedType (<[ decl:
              public sealed class $(delegate_name : name) : System.MulticastDelegate { }
            ]>)

          | _ =>
            Util.ice ("top-level delegate")
        }

      td.Define (<[ decl:
        public this (_ : object, _ : System.IntPtr)
        {
          base (typeof (System.Object), "")
        }
      ]>);

      td.Define (<[ decl:
        public virtual BeginInvoke (_ : string,
                                    _ : System.AsyncCallback,
                                    _ : object) : System.IAsyncResult { null }
      ]>);

      td.Define (<[ decl:
        public virtual EndInvoke (_ : System.IAsyncResult) : void { }
      ]>);

      // FIXME: invoke parameters
      td.Define (<[ decl:
        public virtual Invoke (_ : string) : void { }
      ]>);

      td.Compile ()
    }
  }
}
