#if HELLO || ALL1
#line 0
class Hello
{
  static Main () : void
  {
    System.Console.WriteLine ("Hello world!");
  }
}
#line default
#endif


#define OMMIT
namespace Adder1 {
#undef OMMIT
#if ADDER1 || ALL2
#line 0
/** Our second example.  This is a comment. */
/// This is also a comment.

using System;

public class Adder      /// As in C# we can mark class public.
{
  public static Main () : void         /// And method too.
  {
    /** Read two lines, convert them to integers and return their
       sum.  */
    Console.WriteLine ("The sum is {0}", 
                       /// System.Int32.Parse converts string into integer.
                       Int32.Parse (Console.ReadLine ()) + 
                       Int32.Parse (Console.ReadLine ()));
  }
}
#line default
#endif
#define OMMIT
}
#undef OMMIT

#define OMMIT
namespace Adder2 {
#undef OMMIT
#if ADDER2 || ALL3
#line 0
using System;
using System.Console;

public class Adder
{
  public static Main () : void
  {
    WriteLine ("The sum is {0}", 
               Int32.Parse (ReadLine ()) + 
               Int32.Parse (ReadLine ()));
  }
}
#line default
#endif
#define OMMIT
}
#undef OMMIT


#define OMMIT
namespace Adder4 {
#undef OMMIT
#if ADDER4 || ALL4
#line 0
using System;

public class Adder
{
  // It is private by default.
  static ReadInteger () : int
  {
    Int32.Parse (Console.ReadLine ())
  }
  
  public static Main () : void
  {
    def x = ReadInteger (); // Variable definition.
    def y = ReadInteger ();
    // Use standard .NET function for formatting output.
    Console.WriteLine ("{0} + {1} = {2}", x, y, x + y);
  }
}
#line default
#endif
#define OMMIT
}
#undef OMMIT


#if LINECOUNTER1 || ALL5
#line 0
class LineCounter
{
  public static Main () : void
  {
    // Open a file.
    def sr = System.IO.StreamReader ("SomeFile.txt");   // (1)
    mutable line_no = 0;                               // (2)
    mutable line = sr.ReadLine ();                     
    while (line != null) {              // (3)
      System.Console.WriteLine (line);
      line_no = line_no + 1;            // (4)
      line = sr.ReadLine ();
    };                                  // (5)
    System.Console.WriteLine ("Line count: {0}", line_no);
  }
}
#line default
#endif

#if LINECOUNTER2 || ALL6
#line 0
class LineCounterWithoutLoop
{
  public static Main () : void
  {
    def sr = System.IO.StreamReader ("SomeFile.txt");
    mutable line_no = 0;

    def read_lines () : void {            // (1)
      def line = sr.ReadLine ();
      when (line != null) {               // (2)
        System.Console.WriteLine (line);  // (3)
        line_no = line_no + 1;            // (4)
        read_lines ()                     // (5)
      }
    };
    
    read_lines ();      // (6)
    
    System.Console.WriteLine ("Line count: {0}", line_no); // (7)
  }
}
#line default
#endif

#if LINECOUNTER3 || ALL7
#line 0
class FunctionalLineCounter
{
  public static Main () : void
  {
    def sr = System.IO.StreamReader ("SomeFile.txt");
    def read_lines (line_no : int) : int {   // (1)
      def line = sr.ReadLine ();
      if (line == null)      // (2)
        line_no              // (3)
      else {
        System.Console.WriteLine (line);  // (4)
        read_lines (line_no + 1)          // (5)
      }
    };
    
    System.Console.WriteLine ("Line count: {0}", read_lines (0)); // (6)
  }
}
#line default
#endif

#if INFERENCE || ALL8
#line 0
class HarderInference 
{
  static Main () : int {
    def f (x) { 
      x.Length  
    }; 
    f ("foo");
  }
}
#line default
#endif

