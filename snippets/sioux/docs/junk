<--
    <enum title="public this (name : string, value : string)">
    constructs a cookie with given name and value
    </enum>
    <enum title="public this (name : string, value : string, expires : DateTime)">
    constructs a cookie with given name, value and expiration date
    </enum>
    </enumerate>
    

    <p>
    <b>Properties:</b>
    </p>
    

    <enumerate>
    <enum title="public Name : string">
    <b>get</b> - returns the name of the cookie. The name cannot be changed after creation.
    </enum>
    <enum title="public Value : string">
    <b>set</b> - ssigns a new value to a cookie after the cookie is created <br/> <b>get</b> - return value of cookie
    </enum>
    <enum title="public Path : string">
    <b>set</b> - setting a virtual path of cookie to which client should return cookie<br/> <b>get</b> - getting a path of cookie 
     to which client should return cookie
    </enum>
    <enum title="public Domain : string">
    <b>set</b> - specifies a path for the cookie to which the client should return the cookie <br/> 
    <b>get</b> - returns the domain name set for this cookie
    </enum>
    <enum title="public Expires : DateTime">
    <b>set</b> - sets the expiration date and time for cookie <br/> 
    <b>get</b> - gets the expiration date and time for cookie 
    </enum>
    <enum title="public Secure : bool">
    <b>set</b> - sets a value indicating the browser whether the cookie should only be sent using a secure protocol, 
        such as HTTPS or SSL. <br/> 
    <b>get</b> - gets ----||---- 
    </enum>
    <enum title="public Header : string * string">
    <b>get</b> - get a header pair representing cookie, where first elem is header name and second is header value
    </enum>
    </enumerate>
    
    <p>
    <b>Methods:</b>
    </p>    
    <enumerate>
    <enum title="public override ToString() : string">
     Returns string representation of cookie
    </enum>
    </enumerate>
    -->

<p>
    <b>Constructors:</b>
    </p>    
    <enumerate2>
     <enum2  name="this"> 
      <args>
       <ul>
        <li> name : string </li>
       </ul>
      </args>
      <desc>
      constructs a cookie with given name
      </desc>
     </enum2>

     <enum2  name="this"> 
      <args>
       <ul>
        <li> name : string </li>
	<li> value : string </li>
       </ul>
      </args>
      <desc>
      constructs a cookie with given name and value
      </desc>
     </enum2>
     <enum2  name="this"> 
      <args>
       <ul>
        <li> name : string </li>
	<li> value : string </li>
	<li> expires : DateTime </li>
       </ul>
      </args>
      <desc>
      constructs a cookie with given name, value and expiration time
      </desc>
     </enum2>
    </enumerate2>
    
    <p>
    <b>Public properties:</b>
    </p>

    <enumerate2>
    <enum2 qual="string" name="Name">
    <desc>
    <b>get</b> - returns the name of the cookie. The name cannot be changed after creation.
    </desc>
    </enum2>
    <enum2 qual="string" name="Value">
    <desc>
    <b>set</b> - ssigns a new value to a cookie after the cookie is created <br/> <b>get</b> - return value of cookie
     </desc>
    </enum2>
    <enum2 qual="string" name="Path">
    <desc>
    <b>set</b> - setting a virtual path of cookie to which client should return cookie<br/> <b>get</b> - getting a path of cookie 
     to which client should return cookie
      </desc>
    </enum2>
    <enum2 qual="string" name="Domain">
    <desc>
    <b>set</b> - specifies a path for the cookie to which the client should return the cookie <br/> 
    <b>get</b> - returns the domain name set for this cookie
     </desc>
    </enum2>
    <enum2 qual="DateTime" name="Expires">
    <desc>
    <b>set</b> - sets the expiration date and time for cookie <br/> 
    <b>get</b> - gets the expiration date and time for cookie 
     </desc>
    </enum2>
    <enum2 qual="bool" name="Secure">
    <desc>
    <b>set</b> - sets a value indicating the browser whether the cookie should only be sent using a secure protocol, 
        such as HTTPS or SSL. <br/> 
    <b>get</b> - gets ----||---- 
     </desc>
    </enum2>
    <enum2 qual="string * string" name="Header">
    <desc>
    <b>get</b> - get a header pair representing cookie, where first elem is header name and second is header value
     </desc>
    </enum2>
    </enumerate2>

    <p>
    <b>Public methods:</b>
    </p>    
    <enumerate2>
    <enum2 qual="string" name="ToString">
     <desc>
     <b>Overriden</b>
     Returns string representation of cookie
      </desc>
      <args>
      <ul>
      <li>()</li>
      </ul>
      </args>
    </enum2>
    </enumerate2>

    </subsection>