using System;
using SCG = System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Utility;
using Nemerle.Peg;

namespace CSharpParser
{
  // TODO: Move to Expr?

  [Record]
  public variant TypeRef : Located
  {
    | BuiltIn {
      name : string;
    }
    | Name {
      name : Expr;

      public new this(name : Expr)
      {
        this(name.Location, name);
      }
    }
    | Array {
      baseType : TypeRef;
      dim : int;
    }
    | Nullable {
      baseType : TypeRef;
    }
    | Pointer {
      baseType : TypeRef;
    }

    public override ToString() : string
    {
      match (this)
      {
        | BuiltIn(name)           => name
        | Name(name)              => name.ToString()
        | Array(baseType, dim)    => $"$baseType[$dim]"
        | Pointer(baseType)       => $"$baseType*"
        | Nullable(baseType)      => $"$baseType?"
      }
    }
  }
}