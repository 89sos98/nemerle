using Nemerle.IO;

module O {
  print_word (c : char) : void = extern "System.Console.WriteLine";

  public foo () : void { print_word ('c') }

  public goo () : void = extern "O.foo";

  public generic <'a> (x : 'a) : bool = extern "O.mygeneric";
  public mygeneric <'a> (x : 'a) : bool {
    def _ = x;
    true;
  }
}

class ExternalCallsTest
{
  static print_char (c : char) : void = extern "System.Console.Write";

    public static Main () : void
    {
        O.goo ();
        print_char ('x');
        print_char ('\n');
// FIXME: external with generics doesn't work
//        System.Console.WriteLine (O.generic (1));

        if (System.IO.File.Exists ("ext_test.out"))
          printf ("System.IO.File.Exists\n")
        else
          printf ("System.IO.File.Exists\n");

        def sw = System.IO.StreamWriter ("ext_test.out");

        sw.WriteLine ("Hello World, my name is not Jan B.!");

        sw.Flush ();

        sw.WriteLine ("This is number five: " + 5.ToString ());

        sw.Close ();

        def arr = array [0, 1, 2, 3, 4];

        System.Console.WriteLine ("Array's length is {0}", 
                                  System.Convert.ToString (arr.Length));

        ()
    }
}

/*
BEGIN-OUTPUT
c
x
System.IO.File.Exists
Array's length is 5
END-OUTPUT
*/
