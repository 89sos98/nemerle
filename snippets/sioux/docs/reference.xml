<?xml version="1.0" encoding="utf-8"?>
<page subtitle="Sioux Reference Manual">

  <section title="1. Introduction" anchor="intro">
    <p>
    This document describes classes from <b>Sioux</b> namespace and <b>Nemerle.Xml</b> namespace.
    </p>
  </section>
  <section title="2. Sioux namespace" anchor="sioux">

  <!-- COOKIE CLASS =========================================================================== -->

    <subsection title="2.1 Cookie class" anchor="cookie">
    <p>
    Creates a cookie, a small amount of information sent by a web application  to a Web browser, saved by the browser, 
    and later sent back to the server.
    </p>
    
    <p>
    <b>Constructors:</b>
    </p>

    <enumerate>
    <enum title="public this (name : string, value : string)">
    constructs a cookie with given name and value
    </enum>
    <enum title="public this (name : string, value : string, expires : DateTime)">
    constructs a cookie with given name, value and expiration date
    </enum>
    </enumerate>
    

    <p>
    <b>Public properties:</b>
    </p>
    

    <enumerate>
    <enum title="public Name : string">
    <b>get</b> - returns the name of the cookie. The name cannot be changed after creation.
    </enum>
    <enum title="public Value : string">
    <b>set</b> - assigns a new value to a cookie after the cookie is created <br/> <b>get</b> - return value of cookie
    </enum>
    <enum title="public Path : string">
    <b>set</b> - setting a virtual path of cookie to which client should return cookie<br/> <b>get</b> - getting a path of cookie 
     to which client should return cookie
    </enum>
    <enum title="public Domain : string">
    <b>set</b> - specifies a path for the cookie to which the client should return the cookie <br/> 
    <b>get</b> - returns the domain name set for this cookie
    </enum>
    <enum title="public Expires : DateTime">
    <b>set</b> - sets the expiration date and time for cookie <br/> 
    <b>get</b> - gets the expiration date and time for cookie 
    </enum>
    <enum title="public Secure : bool">
    <b>set</b> - sets a value indicating the browser whether the cookie should only be sent using a secure protocol, 
        such as HTTPS or SSL. <br/> 
    <b>get</b> - gets ----||---- 
    </enum>
    <enum title="public Header : string * string">
    <b>get</b> - get a header pair representing cookie, where first elem is header name and second is header value
    </enum>
    </enumerate>
    
    <p>
    <b>Public methods:</b>
    </p>    
    <enumerate>
    <enum title="public override ToString() : string">
     Returns string representation of cookie
    </enum>
    </enumerate>
    </subsection> 

  <!-- SESSION CLASS ====================================================================== -->

    <subsection title="2.1 Session class" anchor="session">
    <p>
    Provides a way to identify a user across more than one page request or visit to a Web site and to store 
    information about that user.
    </p>
    
    <p>
    <b>Public properties:</b>
    </p>    
    
    <enumerate>
    <enum title="public SessionID : string">
    <b>get</b> - returns a string containing the unique identifier assigned to this session.
    </enum>

    <enum title="public Timeout : int">
    <b>set</b> - specifies the time, in minutes, between client requests before Sioux will invalidate this session.<br/>
    <b>get</b> - returns the maximum time interval, in minutes, that sioux will keep this session open between 
      client accesses. After this interval, sioux will invalidate the session. A -1 time indicates the session 
      should never timeout.
    </enum>

    <enum title="public CreationTime : DateTime">
    <b>get</b> - returns time when session was created
    </enum>

    <enum title="public LastAccesedTime : string">
    <b>get</b> - returns time when client last sent request associated with session
    </enum>

    <enum title="public IsNew : bool">
    <b>get</b> - returns true when session was created with last client request 
    </enum>

    <enum title="public IsValid : bool">
    <b>get</b> - gets a value indicating if session is stall valid 
    </enum>

    <enum title="public Attributes : list &lt;string * object &gt;">
    <b>get</b> - returns a list of all attributes associated with session, where first element of pair is attribute name, and second 
    is attribute
    </enum>
    </enumerate>

    <p>
    <b>Public methods:</b>
    </p>    
    <enumerate>
    <enum title="public Invalidate() : void">
      Invalidates this session
    </enum>
    
    <enum title="public AddAttribute(name : string,attribute : object) : void">
      Adds attribute to session using specified name
    </enum>

    <enum title="public RemoveAttribute(name : string) : void">
      Removes attribute with specified name from session 
    </enum>

    <enum title="public ContainsAttribute(name : string) : bool">
      Returns true if session contains attribute with given name, else returns false
    </enum>

    <enum title="public GetAttribute(name : string) : option &lt;object&gt;">
      Returns Some(attribute) if session contains attribute with specified name, else returns None
    </enum>

    </enumerate>

    </subsection>    

  </section>
  <section title="3. Nemerle.Xml namespace" anchor="xml">
    <p>
    
    </p>
  </section>
</page>