class Foo[T]
{
    public mutable Hello : T;

    public this ()
    { }
}

class A
{
  static apply (f : void -> void) : void { f () }

  public static Main () : void {
    def f2 (allow_ref) {
      when (allow_ref)
        apply (fun () { f2 (! allow_ref) })
    }
    f2 (true);


    def x = if (true) [ ([["foo"]], "foo") ] else [];

    assert (x is [ ([["foo"]], "foo") ]);

        def foo = Foo ();
        foo.Hello = 42;
        assert (foo.Hello == 42);
        Nemerle.IO.printf("%d\n",foo.Hello);
        
def foo () {
  try { 4242 } finally { System.Console.WriteLine ("foo"); }
}

System.Console.WriteLine (None ().WithDefault (foo ()))
  }
}

/*
BEGIN-OUTPUT
42
foo
4242
END-OUTPUT
*/
