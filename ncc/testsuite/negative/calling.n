class M {
  static f () : void { u (1) } // E: in argument #1.* needed.*

  static u (_ : string) : void { } // OK

  static g () : void { 1 () }    // E: the value called has non-functional type int

  static h () : void { M.g(2) }    // E: wrong number of parameters in call, needed 0, got 1

  static p (params _ : array [int])  : void {} // OK

  static foo () : void {
    def x = System.Text.StringBuilder ();
    x.Chars (0) = 'a';         // E: attempt to call an indexer property `Chars'
    
    p (3); // OK
    mutable q = 3;
    p (ref q); // E: ref/out parameters are not allowed with `parms'
    p ("foo"); // E: .*needed .*int.* got string

    ignore (4, 4);              // E: error: macro `ignore' expects following list 
  }
}


variant H {
  | J
  | K
}

class X {
  g () : void {
    def f (x : H) {
      _ = x; 
    }
   f (H.J);  // E: in argument #1.*, needed a H, got void -> H
 }
}
