// THIS CODE WORKS! :-)

class A ['a] {
  public mutable f : 'a;
  
  public take () : 'a {
    f
  }
  
  public put (x : 'a) : void {
    _ = A(1);
    f = x;
  }
  
  public this (a : 'a) {
    f = a;
  }
  
  public this () { } 
}

module M {
   obj : A [string];

   this () {  
     obj = A ();
     obj.put ("Ala");
   }

   Main () : void {
      def x = A(1);
      x.put (2);
      def y = x.take ();
      assert (y == 2);
      assert (obj.take () == "Ala");
      _ = obj.take ();
   }
}

class B ['a] {
  f : 'a;

  protected this () {  }
  protected this (x : 'a) {
      f = x;
  }
}


class C : B [int] {
  this () { base (1); }
}

/*
class D ['b] : B ['b] {
  public this (x : 'b) { base (x) }
}
*/

//variant genlist ['a] {
//  | Cons { x : 'a; tl : genlist ['a]; }
//  | Nil
//}


// THIS CODE DOESN'T WORK

/* generic methods would benefit from removing CGMethod
class B {
  public genmeth ['a] (x : 'a) : 'a { x }  
}
*/

