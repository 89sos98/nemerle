using Nemerle.Collections;
using Nemerle.Utility;
using Nemerle.Text;
using Nemerle.WPF;

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Windows.Controls;

using System.Windows;
using System.Console;

public class MyStateControl : Button
{
  public this() { base() }

  [DependencyProperty(Metadata = FrameworkPropertyMetadata("a", (_, _) => { }, (_, b) => b))]
  public DependencyProperty1 : string { get { } set { } }

  [DependencyProperty(IsReadOnly)]
  internal DependencyProperty2 : string { get { } set { } }

  [DependencyProperty(IsReadOnly, ValidateCallback = value => value > 0, Metadata = PropertyMetadata(1,(_, _) => { }))]
  public static GetDependencyProperty3(_ : DependencyObject) : int;

  [DependencyProperty]
  public static GetDependencyProperty4(item : DependencyObject) : int;
}

module Program
{
  [STAThread]
  Main() : void
  {
    try
    {
      def control = MyStateControl();
      control.DependencyProperty1 = control.DependencyProperty1 + control.DependencyProperty2;
      def x = MyStateControl.GetDependencyProperty3(control);
      def y = MyStateControl.GetDependencyProperty4(control);
      MyStateControl.SetDependencyProperty4(control, x + y);
    }
    catch
    {
      | e => WriteLine(e.ToString());
    }
  }
}