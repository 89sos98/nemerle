using System;
using SCG = System.Collections.Generic;

using ICSharpCode.Core;
using ICSharpCode.SharpDevelop.Project;

using Nemerle.Assertions;
using Nemerle.Utility;

namespace Nemerle.SharpDevelop.Commands {

    public class NemerleReferenceResolver : AbstractCommand {

        public override Run() : void {
            match(Owner) {
                | project is IProject =>
                    foreach(item in project.Items) {
                        | item when item.ItemType == ItemType.Reference =>
                            match(item.Include) {
                                | "Nemerle"
                                | "Nemerle.Compiler"
                                | "Nemerle.Macros" =>
                                    item.SetMetadata("Private", "True");
                                    item.SetMetadata("HintPath", $"$$(Nemerle)\\$(item.Include).dll");
                                | _ => ()
                            }
                        | item when item.ItemType == ItemTypeExt.MacroReference =>
                            match(item.Include) {
                                | "Nemerle.Macros" =>
                                    item.SetMetadata("HintPath", $"$$(Nemerle)\\$(item.Include).dll");
                                | _ => ()
                            }
                        | _ => ()
                    }
                | _ => ()
            }
        }

    }

}