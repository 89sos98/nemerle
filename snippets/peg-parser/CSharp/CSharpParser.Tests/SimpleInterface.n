using System;
using SCG = System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Utility;

using NUnit.Framework;

using CSharpParser.TestMacros;

namespace CSharpParser.Tests {

  [
    TestFixture,

    Accepts("single interface 1",
    <#
    public interface IFoo {
      /* here comes some members */
      int X { get; set; }
      string this[int a, int b] { get; }
      event global::System.EventHandler OnClick;
    }
    #>),

    Accepts("single interface 2",
    <#
    public partial interface IFoo<[Description] K, out T> : System.IDisposable
      where T: System.IComparable
      where K: new()
    {
      string DoSomth(T x);
      new void Dispose();
    };
    #>),

    Rejects("single interface 1",
    <#
    public interface IFoo {
      /* no ; */
      int Bla { get set; }
    }#>),

    Rejects("single interface 2",
    <#
    /* invalid variance modifier order*/
    public interface IFoo<out [Description] T> { }
    #>),

  ]
  public class SimpleInterface { }

}