using System;
using System.IO;
using System.Diagnostics;
using System.Linq;

using SCG = System.Collections.Generic;
using SR  = System.Reflection;

using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Imperative;
using Nemerle.Utility;
using Nemerle.Compiler.Utils;

using Typed         = Nemerle.Compiler.Typedtree;
using TExpr         = Nemerle.Compiler.Typedtree.TExpr;
using LibRefManager = Nemerle.Completion2.Factories.IntelliSenseModeLibraryReferenceManager;
using Pair          = System.Collections.Generic.KeyValuePair;

namespace Nemerle.Completion2
{
  public partial class Engine : ManagerClass, IEngine
  {
    public event   TypedtreeCreated : EventHandler;

    public ParseTopDeclarations(source : ISource) : list[TopDeclaration]
    {
      if (IsProjectAvailable) // Get cached TopDeclaration-s.  VladD2: This is not thread safe!
        this.Project.CompileUnits.GetTopDeclarations(source.FileIndex);
      else
        ParseCompileUnit(source.GetTextCurrentVersionAndFileIndex()).TopDeclarations
    }

    // HACK: see usings
    public static VeryBigNumber = 1000000;
  } // end class Engine
} // end of Nemerle.Completion2 namespace
