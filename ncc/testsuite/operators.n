class Foo {
  public x : int;

  public this (x : int) {
    this.x <- x
  }

  public static @+ (a : Foo, b : Foo) : Foo {
    Foo (a.x + b.x + 1)
  }

  public static @%| (a : Foo, b : Foo) : bool {
    a.x + b.x > 0
  }

  public static @++ (a : Foo) : Foo {
    Foo (a.x + 1)
  }

  public static @^ (a : Foo, b : Foo) : void {
    Nemerle.IO.printf ("want to %d ^ %d?\n", a.x, b.x)
  }
  
}

class B {
  static Main () : void {
    def a = Foo (1) + Foo (1);
    Nemerle.IO.printf ("%d\n", a.x);
    when (Foo (0) %| Foo (1)) Nemerle.IO.printf ("good\n");
    Nemerle.IO.printf ("%d\n", (++a).x);
    a ^ Foo (10);
  }
}


/*
BEGIN-OUTPUT
3
good
4
want to 3 ^ 10?
END-OUTPUT
*/
