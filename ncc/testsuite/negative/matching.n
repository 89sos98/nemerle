enum E {
  | A
  | B
}
 
[Record]
class Boo {
   public x : E;
   public y : list [int];  
}
 
module Mai {
  Main () : void {
    match (Boo (E.A, [])) {
      | Boo where (y = E.B) => ()  // E: Nemerle.Core.list is not a subtype of E
    }
    def _x = 4;
    match (5) {
      | _x + 1 => ();  // E: couldn't fold arithmetic expression
    }
  }
}
 
 
module NoMatchOn {
  Run () : void { // E: there is nothing to
    | _ => ()
  }
}
