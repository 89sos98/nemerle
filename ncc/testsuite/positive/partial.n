
using Nemerle.IO;

partial class A {
  class I { }
  public B : int = 1;
}

[System.Flags]
partial class A {
  public H : int = 2;

}

namespace N {
  partial class A {
    class I { }
    public B : int = 3;
  }

  [System.Flags]
  partial class A {
    public H : int = 4;
  }
}

class U {
  static Main () : void {
    def x = A ();
    print ($"$(x.B)\n");
    print ($"$(x.H)\n");
    def x = N.A ();
    print ($"$(x.B)\n");
    print ($"$(x.H)\n");
    def f = typeof (A).GetCustomAttributes (true);
    foreach (a in f) 
      when (a.ToString ().IndexOf ("Flags") != -1)
            print ("Flags\n");
  }
}

/*
BEGIN-OUTPUT
1
2
3
4
Flags
END-OUTPUT
*/
