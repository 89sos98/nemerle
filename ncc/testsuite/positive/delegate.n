using Nemerle.IO;

module M {

  public delegate MyPrintDelegate (s : string) : void;

  run_my_delegate (s : string, mpd : MyPrintDelegate) : void
  {
    mpd.Invoke (s)
  }
  
  run_delegate (ts : System.Threading.ThreadStart) : void
  {
    ts.Invoke ()
  }
  
  run_delegate (s : string, ts : System.Threading.WaitOrTimerCallback) : void
  {
    ts.Invoke (s, true);
    ts.Invoke (s, false)
  }
  
  static_meth () : void
  {
    printf ("static_meth\n")
  }

  string_static_meth (s : string) : void
  {
    printf ("string_static_meth: %s\n", s)
  }
  
  static_timer_meth (o : object, b : bool) : void
  {
    printf ("s: %s:%s\n", (o :> string), if (b) "t" else "f")
  }

  class C {
    name : string;
    public this (n : string) { name = n }
    public m1 () : void
    {
      printf ("%s C.m1\n", name)
    }
    public m2 (o : object, b : bool) : void
    {
      printf ("%s: %s:%s\n", name, (o :> string), if (b) "t" else "f")
    }
  }
  
  Main () : void 
  {
    def str = "local_meth";
    def local_meth () {
      printf ("%s\n", str)
    };
    def local_timer_meth (o : object, b : bool) : void {
      printf ("l: %s:%s\n", (o :> string), if (b) "t" else "f")
    };
    
    run_delegate (System.Threading.ThreadStart (static_meth));
    run_delegate (System.Threading.ThreadStart (local_meth));
    run_delegate ("foo", System.Threading.WaitOrTimerCallback (local_timer_meth));
    run_delegate ("foo", System.Threading.WaitOrTimerCallback (static_timer_meth));
    run_delegate ("bar", System.Threading.WaitOrTimerCallback (static_timer_meth));

    run_my_delegate ("foobarized", M.MyPrintDelegate (string_static_meth));

    def c1 = C ("c1");
    def c2 = C ("c2");
    run_delegate (System.Threading.ThreadStart (c1.m1));
    run_delegate (System.Threading.ThreadStart (c2.m1));
    run_delegate ("qux", System.Threading.WaitOrTimerCallback (c1.m2));
    run_delegate ("qux", System.Threading.WaitOrTimerCallback (c2.m2));
  }
}

/*
BEGIN-OUTPUT
static_meth
local_meth
l: foo:t
l: foo:f
s: foo:t
s: foo:f
s: bar:t
s: bar:f
string_static_meth: foobarized
c1 C.m1
c2 C.m1
c1: qux:t
c1: qux:f
c2: qux:t
c2: qux:f
END-OUTPUT
*/
