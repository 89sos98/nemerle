
class A ['a] where 'a : class {
  public foo (_ : 'a) : 'a {
    null
  }
}

class B ['a] where 'a : struct {
  public foo (_ : 'a) : 'a {
    'a ()
  }
}

class C ['a] where 'a : new () {
  public foo (_ : 'a) : 'a {
    'a ()
  }
}

class D ['a] where 'a : class, new () {
  public foo (_ : 'a) : 'a {
    assert (null != 'a ());
    'a ()
  }
}

class Foo {
}

class A' ['a] where 'a : class
{
  f : A ['a];
}

class B' ['a] where 'a : struct
{
  f : B ['a];
}

class C' ['a] where 'a : new ()
{
  f : C ['a];
}


assert (A().foo ("a") == null);
assert (B().foo (0) == 0);
assert (C().foo (2) == 0);
assert (C().foo (Foo()) != null);
assert (D().foo (Foo()) != null);


/*
BEGIN-OUTPUT
END-OUTPUT
*/
