using System;

public class Element[T]
{
	public  Item : T;

	public this ( item : T)
	{
		this.Item = item;
	}

	public GetItem ( retval : out T) :  void
	{
		retval = Item;
	}

	public GetItem ( _a : int, _data :  ref T) :  T
	{
		 Item;
	}

	public SetItem ( _data : T) :  void
	{ }
}

public class Foo[T]
{
	 mutable  element : Element[Node];

	public Test () :  Node
	{
		mutable  node = element.Item;
		element.GetItem (out node);
		element.SetItem (node);
		 element.GetItem (3, ref node);
	}

	public class Node
	{
	}
}

class X
{
	static Main () :  void
	{ }
}
/*
ref/out generics are not going to work with 'a->object generics
implementation, will have to wait until real generics.

NO-TEST
BEGIN-OUTPUT
END-OUTPUT
*/
