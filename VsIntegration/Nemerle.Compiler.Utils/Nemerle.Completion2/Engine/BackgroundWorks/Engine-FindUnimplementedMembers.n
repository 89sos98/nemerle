using System;
using System.IO;
using System.Diagnostics;
using SCG = System.Collections.Generic;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Utils.Async;
using Nemerle.Imperative;
using Nemerle.Surround;
using Nemerle.Utility;

using Nemerle.Compiler.Utils;
using Typed = Nemerle.Compiler.Typedtree;
using SR = System.Reflection;
using Nemerle.Completion2;

namespace Nemerle.Completion2
{
  public partial class Engine
  {
    public BeginFindUnimplementedMembers(source : ISource, line : int, col : int) : CodeInfoAsyncRequest
    {
      def request = CodeInfoAsyncRequest(AsyncRequestType.FindUnimplementedMembers,
        this, source, FindUnimplementedMembers, line, col);
      AsyncWorker.AddWork(request);
      request
    }

    private FindUnimplementedMembers(request : AsyncRequest) : void
    {
      AsyncWorker.CheckCurrentThreadIsTheAsyncWorker();
      def fileIndex = request.Source.FileIndex;

      surroundwith (currentAsyncRequest)
      try
      {
        if (IsBuildTypesTreeInProgress)
          AsyncWorker.AddWork(request);
        else
        {
          def project = this.Project;

          if (project == null)
          {
            _ = BeginBuildTypesTree();
            AsyncWorker.AddWork(request);
          }
          else
          {
            def req = request :> CodeInfoAsyncRequest;
            match(project.FindUnimplementedMembers(fileIndex, req.Line, req.Column))
            {
              | Some((ty, unimplementedMembers)) =>
                AsyncWorker.AddResponse(() => 
                  _callback.AddUnimplementedMembers(request.Source, ty, unimplementedMembers));

              | _ => ()
            }
            request.MarkAsCompleted();
          }
        }
      }
      catch
      { | e is CompilationAbortedException =>
          def msg = $"The GetQuickTipInfo operation aborted at: $(e.Message)";
          throw CompilationAbortedException(msg, e);
      }
    }
  } // end class Engine
} // end namespace
