using System;
using SCG = System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Utility;
using Nemerle.Peg;

namespace CSharpParser
{
  [Record]
  public variant Literal : Located
  {
    | Null
    | Boolean { val : bool; }
    | Char    { val : char; }
    | String  { val         : string;
                is_verbatim : bool; }
    | Real    { mantissa  : string;
                exponent  : string;
                suffix    : string; }
    | Integer { val             : ulong;
                is_hexadecimal  : bool;
                suffix          : string; }


    public override ToString() : string
    {
      match (this)
      {
        | Null                                  => "null"
        | Boolean(val)                          => if (val) "true" else "false"
        | Char(val)                             => $"'$val'"
        | String(val, _is_verbatim)             => $<#"$val"#>
        | Real(mantissa, exponent, suffix)      => $"Real($mantissa, $exponent, $suffix)"
        | Integer(val, _is_hexadecimal, suffix) => $"$val$suffix"
      }
    }
  }
}