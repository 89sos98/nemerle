//#undef DEBUG_StringTemplate 
//#define DEBUG_StringTemplate 
using System;
using System.Globalization;
using Nemerle.Collections;
using System.Console;
using Nemerle.Utility;
#if DEBUG_StringTemplate
using ST = StringTemplate2;
#else
using ST = StringTemplate;
#endif
using System.Diagnostics;
using SCG = System.Collections.Generic;

namespace ReportTemplate 
{
	[StringTemplateGroup]
	internal class BaseHtmlReportTemplate[T]
	{
	  public PrintPage(title : string, data : list[T]) : string {<#
	  <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
	  <html xmlns="http://www.w3.org/1999/xhtml" >
	  <head>
	    <title>$title</title>
	    <style type="text/css">
	    body, td, div, select, input {
	      font-family: Tahoma;
	      font-size: 12px;
	      margin-left: 0;
	      padding-left: 0;
	      margin-right: 0;
	      padding-right: 0;
	    }/* Report */ 
	    table.Report{
	      border-collapse: collapse;
	      border-width:0.5pt;
	      border-style:solid;
	      border-spacing:0;
	      border-color: #808080;
	      padding: 0px 0px 0px 0px;
	      margin:0px 0px 0px 0px;
	    }
	    table.Report th {
	      background-color :#E5E5E5;
	      font-weight : bold;
	      padding : 2px;
	      border-width:0.5pt;
	      border-style:solid;
	      border-spacing:0;
	      border-color: #808080;
	    }
	    table.Report td {padding : 2px;border-width:0.5pt;border-style:solid;border-spacing:0;border-color: #808080;}
	    table.Report td.head {background-color :#E5E5E5;font-weight : bold;padding : 2px;text-align : left;}
	    table.Report th.VertTxt{layout-flow: vertical-ideographic;FILTER: flipv fliph;WRITING-MODE: tb-rl;white-space:nowrap;text-align:left;}
	    /* end Report */
	    .RGHT{text-align: right;}
	    .LFT{text-align: left;}
	    @media page {size: A4 landscape;}
	  </style>
	  </head>
	  <body>
	    $(PrintBody(data))
	  </body>
	  </html>
	  <!--Конец шаблона-->
	  #>}
	  
	  public PrintBody(_data : list[T]) : string {""}
	}
	
	[StringTemplateGroup]
	internal class LinkReportTemplate : BaseHtmlReportTemplate[string * string * int * int * int]
	{
	  override PrintBody (data : list[string * string * int * int * int]) : string {<#
    <table class="Report">
    <tr>
       <th>Продукт</th>
       <th>Серия</th>
       <th>Паспорт</th>
       <th>Сертификат</th>
       <th>Декларация</th>
    </tr>
      ..$(data; ""; PrintData)
    </table>
    #>}
    
    PrintData(product : string, 
              serialNumber : string, 
              registrationCertificateCount : int, 
              certificateOfConformanceCount : int, 
              conformityDeclarationCount : int) : string {<#
    <tr>
      <td>$(product)</td>
      <td>$(serialNumber)</td>
      <td class="RGHT">$(registrationCertificateCount)</td>
      <td class="RGHT">$(certificateOfConformanceCount)</td>
      <td class="RGHT">$(conformityDeclarationCount)</td>
    </tr>
    #>}
	}
}


module Program
{
  Main() : void
  {
    def data = [
      ("pen",    "P-123-321", 5, 3, 4),
      ("pencil", "P-322-813", 2, 1, 1),
      ("Vase",   "V-742-572", 7, 2, 6),
      ];
    System.Console.BackgroundColor = ConsoleColor.DarkCyan;
    
    def res = LinkReportTemplate.PrintPage("Links", data);
    Write(res);
    
    System.Console.ResetColor();

    WriteLine();
    Write("...");
    //_ = ReadLine();
  }
}

/*
BEGIN-OUTPUT
BEGIN TRAN
...
END-OUTPUT
*/ 