
public module TestChecked
{
  private TestIt (x : int) : int
  {
    checked {      
      def x = System.Int32.MaxValue + 20 + x; // E: the operation overflows at compile-time during constants folding in checked mode
      def y = System.Int32.MinValue * -1; // E: the operation overflows at compile-time during constants folding in checked mode
      def z = System.Int32.MinValue - System.Int32.MaxValue + 2 * x; // E: the operation overflows at compile-time during constants folding in checked mode

      _ = 1 /0; // E: division by zero during constants folding
      
      x + y + z
    }
  }
  
  public Main () : void
  {
    ignore (TestIt (10))
  }
}

/*
BEGIN-OUTPUT
END-OUTPUT
*/
