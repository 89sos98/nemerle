// NO-TEST
public class ArrayTest
{
        static make (s : string) : void {
          regexp (match (s) {
            | "a*" => printf ("1\n");
            | "b+.*" => printf ("2\n");
            | _ => printf ("default\n");
          });
        }

	public static Main () : void 
	{
          mutable s <- System.Text.RegularExpressions.Regex (@"(^(a(b))(c(d)(?<kamil>(e)*))$)|(?<kamil>^now$)(?<kamil>b)|(^nor$)");
          def tex = "abcdeee";
//          def tex = "nowb";
//          def tex = "nor";
          def m = s.Match(tex);
          def empty = "1";
          def q = System.Convert.ToInt32 (empty);
          printf ("%d\n", q);
          printf("%s\n", m.Groups["kamil"].ToString());
          for (mutable i <- 0; i < m.Groups.Count; i <- i + 1) {
            printf ("%s\n", m.Groups[i].ToString ());
          };


          make ("aaaaa");
          make ("bbbbbla");
          make ("c");
	}
}

(*
BEGIN-OUTPUT
1
eee
abcdeee
abcdeee
ab
b
cdeee
d
e

eee
END-OUTPUT
*)
