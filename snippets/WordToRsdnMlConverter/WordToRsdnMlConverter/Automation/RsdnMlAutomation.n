using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Xml.Linq;
using System.Runtime.InteropServices;

using Rsdn.Framework.Formatting.FormatterHelper;
using Utilities;

[Guid("97FD4A3D-2244-40d2-BF79-B76C1BB0A083")] // CLSID. Сногие думают что так задается IID дефолтного интрфейса, но это не так.
[ComVisible(true), ClassInterface(ClassInterfaceType.None)]
public class RsdnMlAutomation : IRsdnMl
{
  public Languages : array[string]
  {
    [Memoize]
    get { GetLangInfos().Select(inf => inf.DisplayName).OrderBy(x => x).ToArray() }
  }
  
  
  public HighlightCodeFragment(language : string, code : string) : array[IRangeData]
  {
    def langId = 
      match (GetLangInfos().Find(x => x.DisplayName == language))
      {
        | Some(langId) => langId
        | _ => throw COMException($"Не задан или задан неверно язык используемый при подсветке кода: '$language'")
      };
    def higlightedCode = MarkupCode(langId, code.HtmlMangling());
    def root           = XElement.Parse($"<root>$higlightedCode</root>", LoadOptions.PreserveWhitespace);
    def res            = List();
    def tagNameToStyle(tagName : string) : string
    {
      | "kw"           => "<KEYWORD>"
      | "str"          => "<STRING>"
      | "com"          => "<COMMENT>"
      //| "NUMBER"       => "<NUMBER>"
      //| "PREPROCESSOR" => "<PREPROCESSOR>"
      //| "ACCENT"       => "<ACCENT>"
      | x              => x
    }
    mutable pos        = 0;
    
    foreach (n in root.Nodes())
    {
      | txt is XText    => pos += txt.Value.Length;
      | e   is XElement => 
        res.Add(RangeData(pos, {pos += e.Value.Length; pos}, tagNameToStyle(e.Name.LocalName)));
      | _ => ()
    }
    
    res.NToArray()
  }
  
  public MakeXmlAndShowPreview(path : string) : array[string]
  {
    def rsdnMl = RsdnMl();
    rsdnMl.ConvertDocToRsdnMl(path);
    rsdnMl.Errors
  }  
}
