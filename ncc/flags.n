/*
 * Copyright (c) 2004 The University of Wroclaw.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. The name of the University may not be used to endorse or promote
 *       products derived from this software without specific prior
 *       written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
 * NO EVENT SHALL THE UNIVERSITY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

namespace Nemerle.Compiler 
{
  public module Flags
  {
    public mutable output_file_name : string;
    public mutable XmlDoc : bool;
    public mutable dump_typed_tree : bool;
    public mutable target_is_library : bool;
    public mutable target_is_winexe : bool;
    public mutable ignore_confusion : bool;
    public mutable throw_on_error : bool;
    public mutable general_tail_call_opt : bool;
    public mutable progress_bar : bool;
    public mutable referenced_libraries : list [string];
    public mutable pedantic_lexer : bool;
    public mutable constant_boolean_matching_opt : bool;
    public mutable constant_ordinal_matching_opt : bool;
    public mutable constant_string_matching_opt : bool;
    public mutable color_messages : bool;
    public mutable use_loaded_corlib : bool;
    public mutable global_unused_symbols_warnings : bool;
    public mutable enum_flags_warnings : bool;
    public mutable ignored_value_warnings : bool;
    
    this ()
    {
      general_tail_call_opt = false;
      progress_bar = true;
      pedantic_lexer = false;
      referenced_libraries = [];
      output_file_name = "out.exe";
      constant_boolean_matching_opt = true;
      constant_ordinal_matching_opt = false;
      constant_string_matching_opt = false;
      color_messages = true;
      dump_typed_tree = false;
      global_unused_symbols_warnings = false;
      enum_flags_warnings = true;
      ignored_value_warnings = true;
    }
  }
}
