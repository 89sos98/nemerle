using System;
using System.Collections.Generic;

using Nemerle;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;

namespace Nemerle.Completion2
{
  [Record]
	public class CompileUnit
	{
	  public TopNamespace          : Decl.Namespace         { get; private set; }
	  public TopDeclarations       : list[TopDeclaration]   { get; private set; }
	  public Regions               : list[Region]           { get; private set; }
    public ParseCompilerMessages : array[CompilerMessage] { get; private set; }
    /// First element have a fake line (this array indexed at 1).
    public LinesLengths          : array[int]             { get; private set; }
    public SourceVersion         : int                    { get; private set; }
    public FileIndex             : int                    { get; private set; }
    public LinesCount            : int                    { get { LinesLengths.Length - 1 } }

    public override ToString() : string
    {
      def file = IO.Path.GetFileName(Location.GetFileName(FileIndex));
      $"$(GetType().Name) $file"
    }
	}
}
