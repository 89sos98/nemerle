/*
 * Copyright (c) 2004 The University of Wroclaw.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. The name of the University may not be used to endorse or promote
 *       products derived from this software without specific prior
 *       written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
 * NO EVENT SHALL THE UNIVERSITY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

namespace Nemerle.Compiler 
{
  public module Options
  {
    public mutable OutputFileName : string               = "out.exe";
    public mutable XmlDoc : bool                         = false;
    public mutable DumpTypedTree : bool                  = false;
    public mutable TargetIsLibrary : bool                = false;
    public mutable TargetIsWinexe : bool                 = false;
    public mutable IgnoreConfusion : bool                = false;
    public mutable ThrowOnError : bool                   = false;
    public mutable GeneralTailCallOpt : bool             = false;
    public mutable ProgressBar : bool                    = true;
    public mutable ReferencedLibraries : list [string]   = [];
    public mutable PedanticLexer : bool                  = false;
    public mutable ConstantBooleanMatchingOpt : bool     = true;
    public mutable ConstantOrdinalMatchingOpt : bool     = false;
    public mutable ConstantStringMatchingOpt : bool      = false;
    public mutable ColorMessages : bool                  = true;
    public mutable UseLoadedCorlib : bool                = false;
    public mutable GlobalUnusedSymbolsWarnings : bool    = false;
    public mutable EnumFlagsWarnings : bool              = true;
    public mutable IgnoredValueWarnings : bool           = true;
    public mutable DoNotLoadMacros : bool                = false;
    public mutable DoNotLoadStdlib : bool                = false;
    public mutable EmitDebug : bool                      = false;
    public mutable CompileToMemory : bool                = false;    

    internal Validate () : void {
      when (System.IO.Path.GetExtension (OutputFileName) == "")
        OutputFileName +=
          (if (Options.TargetIsLibrary) ".dll" else ".exe");
    }
  }
}
