using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Console;
using System.Linq;
using Nemerle.Xml;
using System.Xml.Linq;

[assembly: DefineXmlns(ns1="some-ns")]

module Program
{
  Main() : void
  {
    //def z : int? = 42;
    //def a = [XAttribute("LANG", "enu"), XAttribute("xx", "yy")];
    //def e1 = xml <# <x /> #>;
    //def elems = [XElement("w"), e1];
    //def res = xml <# <e a="a" ns1:a=$z ..$a>Text $e1<ns2:a ns2:aa="zz" xmlns:ns2="namespace-2"></ns2:a> abc ..$elems</e> #>;
    //def ns1 = XAttribute(XNamespace.Xmlns.GetName("ns1"), "some-ns"); 
    ////res.Add(ns1);
    //WriteLine(res);
    //def name = XName.Get("dyn"); 
    ////def res2 = xml <# <ns2:a xmlns:ns2="namespace-2"><$name $when (z) $ns1/></> #>;
    
    mutable cond = true;
    repeat(2)
    {
      def res2 = xml <# <a><tr $when (cond)/></> #>;
      WriteLine(res2);
      cond = false;
    }
    
    def xs = [1, 2, 3]; 
    //def x = 42;
    def res3 = xml <# <a><tr $foreach (x in xs) attr=$(x * 2)> $x. ---</></> #>;  
    WriteLine(res3);
    
    _ = ReadLine();
  }
}