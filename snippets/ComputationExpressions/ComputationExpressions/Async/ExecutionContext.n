using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.ComputationExpressions.Async
{
  /// <summary>
  /// Description of ExecutionContext.
  /// </summary>
  public abstract class ExecutionContext
  {
    public abstract Execute(computatuion : void -> void) : void;
  }

  /// <summary>
  /// Description of ExecutionContext.
  /// </summary>
  public class SystemThreadPoolExecutionContext : ExecutionContext
  {
    private this(){}
    public static Instance : ExecutionContext = SystemThreadPoolExecutionContext();

    public override Execute(computatuion : void -> void) : void
    {
      when (!Threading.ThreadPool.QueueUserWorkItem(_ => computatuion()))
        throw InvalidOperationException("Failed to queue user work item.");
    }
  }
}
