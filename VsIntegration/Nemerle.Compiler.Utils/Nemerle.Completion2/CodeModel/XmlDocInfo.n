using System;

using Nemerle.Utility;

namespace Nemerle.Completion2
{
  public class XmlDocInfo
  {
    [Accessor(flags=WantSetter)] mutable _summary    : string;
    [Accessor(flags=WantSetter)] mutable _returns    : string;
    [Accessor(flags=WantSetter)] mutable _params     : list[string * string] = [];
    [Accessor(flags=WantSetter)] mutable _exceptions : list[string * string] = [];

    public GetText() : string
    {
      mutable s = "Summary\n\t" + _summary;

      def toString(list, prefix)
      {
        "\n" + prefix + ":\n\t" + list.Map((name, text) => { name + "\t" + text }).ToString("");
      }

      unless (_params.    IsEmpty) s += toString(_params,     "Parameters");
      unless (_exceptions.IsEmpty) s += toString(_exceptions, "Exceptions");

      unless (string.IsNullOrEmpty(_returns))
        s += "\n\nReturn Value:\n\t" + _returns;

      s;
    }
  }
}
