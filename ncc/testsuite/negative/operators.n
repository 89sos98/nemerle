using Nemerle.Collections;

module M {
  [Record]
  class X {}
  Main () : void
  {
    def _ = 1 * null; // E: right-hand side of
    def _ = "foo" + X(); // E: right-hand side of the `\+' operator was expected to have type string
    def _ = X() + "foo"; // E: left-hand side of the `\+' operator was expected to have type string

    def h = Hashtable (); // OK
    h [ "foo" ] = "bar"; // OK
    h [ "dupa" ] = 3; // E: assigned value was expected to have type string.* while it has int
    def _ = h["foo"] : System.Type; // E: type-enforced expression was expected to have type System.Type while it has string

          def loop (x, x2) {
            match ((x, x2)) {
              | [] => x // E: variant option
              | _ when x2 => x
            }
          }

          loop ([], []);


         def loop (x, x2) {
            | [] => x // E: variant option
            | _ when x2 => x
          }

          loop ([], []);

    ()
  }
}
