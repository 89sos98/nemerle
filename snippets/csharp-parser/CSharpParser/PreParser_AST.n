using System;
using SCG = System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Utility;
using Nemerle.Peg;

namespace CSharpParser
{
  [Record]
  public class PreparedCompilationUnit
  {
    [Accessor] elements : list[PreParseElement];
  }

  public variant PreParseElement : Located
  {
    | Comment   { text      : string; }
    | Directive { directive : CSharpParser.Directive; }
  }

  public variant Directive : Located
  {
    | If                  { condition   : DirectiveExpression; }
    | Elif                { condition   : DirectiveExpression; }
    | Else
    | EndIf
    | Define              { symbol      : DirectiveExpression; }
    | Undefine            { symbol      : DirectiveExpression; }
    | LineDefault
    | LineNumber          { number      : int; }
    | Region              { title       : string; }
    | EndRegion           { message     : string; }
    | CompilationWarning  { message     : string; }
    | CompilationError    { message     : string; }
    | Error               { message     : string; }
  }

  public variant DirectiveExpression
  {
    | Boolean
    {
      value : bool;
    }
    
    | Symbol 
    {
      id : string;
    }
    
    | BinaryOperator
    {
      op : string;
      left : DirectiveExpression;
      right : DirectiveExpression
    }
    
    | UnaryOperator
    {
      op : string;
      e : DirectiveExpression;
    }
  }
}