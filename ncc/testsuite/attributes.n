using System;
using Nemerle.IO;

[AttributeUsage(AttributeTargets.Assembly %| AttributeTargets.Class,
                AllowMultiple = true)]
class MyAttribute : Attribute
{
  public this () {}
}

public class B : System.Attribute {
  public this () { }
}

public class C : B {
  public this (_x : string) {  }
}
  

public class A {

  public this () { }
}

module M {
  Main () : void
  {
    def x = MyAttribute ();
    def attrs = x.GetType ().GetCustomAttributes (typeof (AttributeUsageAttribute), false);
    def attr = (attrs[0] :> AttributeUsageAttribute);
    printf ("attrs %d %d %s\n", attrs.Length, 
        (attr.ValidOn :> int),
        if (attr.AllowMultiple) "true" else "false");
  }
}

/*
BEGIN-OUTPUT
attrs 1 5 true
END-OUTPUT
*/
