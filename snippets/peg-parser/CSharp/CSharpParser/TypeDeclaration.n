using System;
using SCG = System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Utility;
using Nemerle.Peg;

namespace CSharpParser
{
  [Record]
  public variant TypeDeclaration : Located
  {
    | Class {
      baseTypes : list[TypeRef];
      members   : list[TypeMember];
    }
    | Struct {
      baseTypes : list[TypeRef];
      members   : list[TypeMember];
    }
    | Interface {
      baseTypes : list[TypeRef];
      members   : list[TypeMember];
    }
    | Enum      {
      baseType      : TypeRef;
      members       : list[EnumMember];
    }
    | Delegate  {   
      returnType    : TypeRef;
      formalParameters : list[FormalParameter];
    }

    [Accessor] attributes     : list[CustomAttribute];
    [Accessor] modifiers      : list[Modifier];
    [Accessor] name           : Identifier;
    [Accessor] typeParameters : list[TypeParameter];
    [Accessor] constraints    : list[TypeParameterConstraintClause];
    [Accessor] bodyLocation   : Location;
  }
}