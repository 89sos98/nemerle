using System;
using System.Globalization;
using System.Globalization.UnicodeCategory;
using SCG = System.Collections.Generic;

using Nemerle.Collections;

namespace LRPEGCC
{

  internal module UnicodeCategoryTable
  {

    private direct_table : Hashtable[string, UnicodeCategory] = Hashtable();
    private reverse_table : Hashtable[UnicodeCategory, string] = Hashtable();

    this()
    {
      def classes = [
        ("Lu", UppercaseLetter),
        ("Ll", LowercaseLetter),
        ("Lt", TitlecaseLetter),
        ("Lm", ModifierLetter),
        ("Lo", OtherLetter),
        ("Mn", NonSpacingMark),
        ("Mc", SpacingCombiningMark),
        ("Me", EnclosingMark),
        ("Nd", DecimalDigitNumber),
        ("Nl", LetterNumber),
        ("No", OtherNumber),
        ("Zs", SpaceSeparator),
        ("Zl", LineSeparator),
        ("Zp", ParagraphSeparator),
        ("Cc", Control),
        ("Cf", Format),
        ("Cs", Surrogate),
        ("Co", PrivateUse),
        ("Pc", ConnectorPunctuation),
        ("Pd", DashPunctuation),
        ("Ps", OpenPunctuation),
        ("Pe", ClosePunctuation),
        ("Pi", InitialQuotePunctuation),
        ("Pf", FinalQuotePunctuation),
        ("Po", OtherPunctuation),
        ("Sm", MathSymbol),
        ("Sc", CurrencySymbol),
        ("Sk", ModifierSymbol),
        ("So", OtherSymbol),
        ("Cn", OtherNotAssigned)
      ];
      foreach((str, cat) in classes) {
        direct_table[str] = cat;
        reverse_table[cat] = str;
      }
    }

    public StrToUnicodeCategory(x : string) : option[UnicodeCategory]
    {
      match(direct_table.TryGetValue(x))
      {
        | (cat, true) => Some(cat)
        | _ => None()
      }
    }

    public UnicodeCategoryToStr(cat : UnicodeCategory) : string
    {
      match(reverse_table.TryGetValue(cat))
      {
        | (s, true) => s
        | _ => "[Unknown Unicode class]"
      }
    }
  }
}