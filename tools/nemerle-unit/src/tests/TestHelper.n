using NUnit.Core
using Nemerle.Collections

module TestHelper
    public FindTest(test_name: string,tests: list[Test]): Test
        match ( tests.Find( (x=>x.Name.Equals(test_name)) ) )
                    | Some(x) => x
                    | None => null
        
    public TestPasses(test_name: string, tests:list[Test]): bool
        def the_test = FindTest(test_name,tests) 
        def test_result = the_test.Run(NullListener())
        test_result.IsSuccess

    public MessageAfterTestRun(test_name: string, test_fixture: string): string
        def the_test = FindTest(test_name,GetAllTests(GetFixture(test_fixture)))
        def test_result = the_test.Run(NullListener())
        test_result.Message

    public TestPasses(test_name: string, test_fixture: Test): bool
        TestPasses(test_name,GetAllTests(test_fixture))

    public GetAllTests(a_test: Test): list[Test]
        def descendants = if (a_test.Tests != null) //co za gowniania implementacja NUnit!
             $[GetAllTests(child:>Test) | child in a_test.Tests]
        else
            []
        a_test :: List.Concat(descendants)

    public GetFixture(name: string): Test
        def runner = SimpleTestRunner()
        def suit = runner.Load( "fixture.dll" )
        FindTest( name, GetAllTests(suit) )


