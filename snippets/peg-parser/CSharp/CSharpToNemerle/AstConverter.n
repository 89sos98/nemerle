using System;
using SCG = System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Utility;
using Nemerle.Collections;
using Nemerle.Compiler;

using PT = Nemerle.Compiler.Parsetree;
using PEG = Nemerle.Peg;
using CS = CSharpParser;

namespace CSharpToNemerle
{
  [Record]
  public partial class AstConverter
  {
    manager : ManagerClass;

    [RecordIgnore] mutable currentEnv : GlobalEnv;

    [RecordIgnore] mutable typeDecls : SCG.List[PT.TopDeclaration];

    public Convert(compilationUnit : CS.CompilationUnit) : list[PT.TopDeclaration]
    {
      //assert2(false);
      manager.MacroColors.PushUseSiteColor();
      try {
        typeDecls = SCG.List();
        currentEnv = manager.CoreEnv;
        ConvertExternAliases(compilationUnit.ExternAliases);
        ConvertUsingDirectives(compilationUnit.UsingDirectives);
        ConvertGlobalAttributes(compilationUnit.GlobalAttributes);
        ConvertNamespaceNodes(compilationUnit.Members);
        NList.ToList(typeDecls)
      } finally {
        manager.MacroColors.PopColor();
      }
    }
  }
}