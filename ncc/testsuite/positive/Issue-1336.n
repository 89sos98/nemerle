using System;
using System.Console;

public module Program
{
  public Foo1[T](x : T = default(T)) : void { WriteLine($"Foo1 x='$x'"); }
  public Foo2[T](x     = default(T)) : void { WriteLine($"Foo2 x='$x'"); }
  public Foo3[T](x : T = default(_)) : void { WriteLine($"Foo3 x='$x'"); }

  DefaultInt    : int    = default(int);
  DefaultString : string = default(string);
  DefaultDateTime : DateTime = default(DateTime);

  ReturnDefault[T]() : T { default(T) }

  UseDefault[T]() : void
  {
    mutable x : T;
    mutable y : T = default(T);

    WriteLine($"UseDefault x='$x', y='$y'");
  }

  public Main() : void
  {
    Threading.Thread.CurrentThread.CurrentCulture = Globalization.CultureInfo.InvariantCulture;
    
    Foo1.[int]();
    Foo1.[DateTime]();
    Foo1.[string]();

    Foo2.[int]();
    Foo2.[DateTime]();
    Foo2.[string]();

    Foo3.[int]();
    Foo3.[DateTime]();
    Foo3.[string]();

    // Literal
    WriteLine($"DefaultInt='$DefaultInt'");
    WriteLine($"DefaultDateTime='$DefaultDateTime'");
    WriteLine($"DefaultString='$DefaultString'");

    // Return
    WriteLine($"ReturnDefault.[int]='$(ReturnDefault.[int]())'");
    WriteLine($"ReturnDefault.[DateTime]='$(ReturnDefault.[DateTime]())'");
    WriteLine($"ReturnDefault.[string]='$(ReturnDefault.[string]())'");
     
    // UseDefault
    UseDefault.[int]();
    UseDefault.[DateTime]();
    UseDefault.[string]();
  }
}
/*
BEGIN-OUTPUT
Foo1 x='0'
Foo1 x='01/01/0001 00:00:00'
Foo1 x=''
Foo2 x='0'
Foo2 x='01/01/0001 00:00:00'
Foo2 x=''
Foo3 x='0'
Foo3 x='01/01/0001 00:00:00'
Foo3 x=''
DefaultInt='0'
DefaultDateTime='01/01/0001 00:00:00'
DefaultString=''
ReturnDefault.[int]='0'
ReturnDefault.[DateTime]='01/01/0001 00:00:00'
ReturnDefault.[string]=''
UseDefault x='0', y='0'
UseDefault x='01/01/0001 00:00:00', y='01/01/0001 00:00:00'
UseDefault x='', y=''
END-OUTPUT
*/
