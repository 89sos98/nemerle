open Nemerle;
open Nemerle.Compiler;
open Nemerle.Compiler.Parsetree;

class M
  {
    static g () : void { 
//      def y = <[ [] ]>;
      def x = <[ if (4 == 4) 1 else Cons (x,xs) ]>; 
//      def x = <[ 2 + 2 ]>;
      Nemerle.Compiler.Macros.print_tree (x, "");
      def k =
        match (x) {
	  | <[ if ( $(a) + $(b) == 8 ) 1 else $(d) ]> => (1,2,3,d) //(a,b,c,d)
//          | <[ Cons (x, xs) ]> => (2,3,4,5)
          | _ => (0,0,0, <[ 2 ]>)
        };

      ()
    }
    static f () : void { M.g () }
  }
