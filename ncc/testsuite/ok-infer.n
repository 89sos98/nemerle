module M {
  f1 (_ : object) : void {}
  
  class X <'a> {
    a : 'a;
    m () : void { f1 (a) }
  }
  
  f () : void {
    def f2 (acc, v) {
      def (x, y) = acc; 
      printf ("%s\n", x);
      printf ("%s\n", y);
      v
    };
    def _ = f2 (("foo", "bar"), 3);
    ()
  }

  public Main () : void {
    def f2<a> (l) {
      def arr =  (System.Array.CreateInstance (typeof (a), 4) :> array <a>);
      Nemerle.Collections.List.Append (l, [arr[0]])
    };
    def bb (b : list<int>, c : list<int> -> list<int>) {
      c(b)
    };
    ignore (bb ([1], f2));
    ()
  }
}
