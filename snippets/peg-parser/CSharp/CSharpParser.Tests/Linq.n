using System;
using SCG = System.Collections.Generic;

using Nemerle.Assertions;
using Nemerle.Utility;

using NUnit.Framework;

using CSharpParser.TestMacros;

namespace CSharpParser.Tests {

  [
    TestFixture,

    Accepts("linq 1",
    <#
    class Foo {
      void X() {
            var q = from customer in q
                    join dept in (new List<SrcDepartment>()) on customer.Customer.DepartmentId equals dept.Id
                    select new Data { Customer = customer.Customer, Orders = customer.Orders, Department = dept };
      }
    }#>),

    Accepts("linq 2",
    <#
    class Foo {
      void X() {
            var q = from customer in q
                    join order in (new List<SrcOrder>()) on customer.Customer.Id equals order.CustomerId
                    group order by customer into all
                    select new Data { Customer = all.Key.Customer, Orders = all, Department = all.Key.Department };
      }
    }#>),

    Accepts("linq 3",
    <#
    class Foo {
      void X() {
            var a = db.Customers
            .GroupJoin(db.fn_GetProducts(), c => c.ID, p => p.ID, (c, ps) => new {c.ID, c, ps})
            .SelectMany(@t => @t.ps.DefaultIfEmpty(), (@t, p) => new {@t.c.ID, @t.c.Name, p.Description});
      }
    }#>),

  ]
  public class Linq { }

}